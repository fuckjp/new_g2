<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"><html><!-- InstanceBegin template="/Templates/main.dwt" codeOutsideHTMLIsLocked="false" --><head><meta http-equiv="Content-Type" charset="UTF-8" /><meta http-equiv="Content-Style-Type" content="text/css"><meta http-equiv="Content-Script-Type" content="text/javascript" /><meta name="keywords" content="[metatags_keywords]"><!-- InstanceBeginEditable name="doctitle" --><title>[metatags_title]</title><meta name="description" content="[metatags_description]"><!-- InstanceEndEditable --><link href="../css/top_common.css" rel="stylesheet" type="text/css" /><!-- InstanceBeginEditable name="css" --><link rel="stylesheet" type="text/css" href="../css/top_second.css" /><link rel="stylesheet" type="text/css" href="../css/products.css" /><!-- InstanceEndEditable --><script type="text/javascript" src="../js/jquery-1.3.2.js"></script><script type="text/javascript"><!--	//メインメニュー（ダウンメニュー）$(document).ready(function(){	$("#g_navi li").hover(function() {	 //メインメニュー（#g_navi li）にマウスが乗った時		$(this).find("s_navi").show();  //サブメニューを表示		} , function() {		$(this).find("s_navi").hide(); //サブメニュー隠す	});});--></script><!-- InstanceBeginEditable name="head" --><!-- InstanceEndEditable --></head><body>  <!-- ▼facebookプラグイン▼ --> <div id="fb-root"></div><script>(function(d, s, id) {  var js, fjs = d.getElementsByTagName(s)[0];  if (d.getElementById(id)) return;  js = d.createElement(s); js.id = id;  js.src = "//connect.facebook.net/ja_JP/sdk.js#xfbml=1&version=v2.5&appId=455715404612425";  fjs.parentNode.insertBefore(js, fjs);}(document, 'script', 'facebook-jssdk'));</script> <!-- ▲facebookプラグイン▲ -->     <!-- ▼Header▼ -->   <div id="header_wid">    <div id="header" class="clearfix">               <div id="logo">  	    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </div>            <div id="top_iine"class="fb-like" data-layout="button_count">				<iframe src="//www.facebook.com/plugins/like.php?&amp;href=https%3A%2F%2Fwww.facebook.com%2F株式会社ライテック-1458314677725880/?fref=ts&amp;width=75&amp;height=25&amp;colorscheme=light&amp;layout=button_count&amp;action=like&amp;show_faces=false&amp;send=true" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:178px; height:20px;" allowTransparency="true"></iframe>      </div><!--facebook いいねボタン -->          <div id="top_link">        <div id="top_linkmenu">   		   <ul>            	<!--<li class="toplink01">[hrefx]</li> -->			<li class="toplink02">[hrefx][hrefx][hrefx][hrefx]</li>			<!--<li class="toplink03">[hrefx]</li> -->			<li class="toplink04">[hrefx][hrefx][hrefx][hrefx]</li>			<li class="toplink04">[hrefx][hrefx][hrefx][hrefx]</li>            <li class="toplink04">[hrefx][hrefx][hrefx]</li>   		  </ul>   		 </div>       </div>                 </div> <!--header終 -->         </div><!--header_wid終 -->   <!-- ▲Header▲ -->             <div id="stripe_wid" class="clearfix">     <!--メインメニュー-->	 <div id="g_navi">      <ul>         <li class="g_navi01">[hrefx][hrefx][hrefx]</li>         <li class="g_navi02">[hrefx][hrefx][hrefx]</li>         <li class="g_navi03">[hrefx][hrefx][hrefx][hrefx]          <span class="s_navi">			[hrefx][hrefx][hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]            [hrefx][hrefx][hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx][hrefx]            [hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx]            [hrefx][hrefx][hrefx]            [hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx]            [hrefx] [hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx]            <!--[hrefx] -->            [hrefx][hrefx][hrefx][hrefx]            [hrefx][hrefx][hrefx][hrefx]			[hrefx]	[hrefx][hrefx][hrefx]		            [hrefx][[hrefx][hrefx][hrefx][hrefx]						[hrefx][hrefx][hrefx][hrefx]            [hrefx][hrefx][hrefx]		  </span>	     </li>         <li class="g_navi04">[hrefx]          <span class="s_navi">            [hrefx][hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx]            [hrefx][hrefx][hrefx][hrefx]					[hrefx][hrefx][hrefx][hrefx]            [hrefx][hrefx][hrefx][hrefx]            [hrefx][hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx]           <!--[hrefx]-->                		  </span>                    </li>         <li class="g_navi05">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>      </ul>     </div>         </div><!--stripe_wid終 -->        <!-- ▼Contents▼ -->	<div id="main" class="clearfix">	  <div id="main-contents">	  <!-- InstanceBeginEditable name="main_contents" -->			<div id="main-left">				<img src="./image/menu/title_menu.gif" alt="製品情報">			<ul class="s_menu">				  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>				  <li class="active">[hrefx][hrefx][hrefx][hrefx]</li>				  <li>[hrefx][hrefx][hrefx][hrefx]</li>				  <li>[hrefx][hrefx][hrefx][hrefx]</li>                								  <li>[hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>				  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>				  <li>[hrefx][hrefx][hrefx][hrefx]</li>                                  <!--<li>[hrefx]</li> -->                    				  <li>[hrefx][hrefx][hrefx][hrefx]</li>                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>				  <li>[hrefx][hrefx][hrefx][hrefx]</li>              	              <li>[hrefx][hrefx][hrefx][hrefx]</li>                  							      <li>[hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                     				</ul>                                <div class="bn_closed">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>			</div>			<div id="main-right">				<div id="contents">					<h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>					<div id="img">					<img src="./image/main02.gif" alt="使いきりライター">				 	</div>					<div id="text">					<p>皆さまには最も身近かでポピュラーな『使いきりライター』。身近にあるものだからこそ、その安全性と、品質の向上を追及し商品を安定供給して参ります。</p>					<ul>                                        	<li>[hrefx][hrefx][hrefx][hrefx]<!--<img src="image/new.gif" width="35" height="15" alt="new" class="new_small"> --></li>                                        	<li>[hrefx][hrefx][hrefx][hrefx]<img src="image/new.gif" width="35" height="15" alt="new" class="new_small"></li>						<li>[hrefx][hrefx][hrefx][hrefx][hrefx]<img src="image/new.gif" width="35" height="15" alt="new" class="new_small"></li>						<li>[hrefx][hrefx][hrefx][hrefx][hrefx]<img src="image/new.gif" width="35" height="15" alt="new" class="new_small"></li>										</ul>					</div>                                                                                <!--2016/05/17 クレーターネオ -->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>                                        <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>                    					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img40_1.jpg" alt="MX-DJ-03 クレーターネオ CR">       			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×40BOX＝800個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-116119</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>27×12×84（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>63×138×88（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>340×290×370（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>23ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>514ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>21.5ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img40_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                            <!--2015/10/08 クレーター -->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>                                                          					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        			<div id="img">                    	<img src="./image/lighter1_img16_1.jpg" alt="TD-06R クレーター">       			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（4色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×40BOX＝800個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-111077</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>27×12×83（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>65×182×86（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>360×350×450（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>21ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>460ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>20.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img16_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                <!--2015/10/08 クレータープレミアム -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img17_1.jpg"  alt="TD-06R クレータープレミアム">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（2色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×40BOX＝800個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-114085</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>27×12×83（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>65×182×86（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>360×350×450（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>21ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>460ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>20.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img17_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                         <!--2016/12/06 ネスタブランド -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><img src="image/zippo/new2017.gif" alt="new2017" width="77" height="20"></div>                    </div>                    <div id="img">                    	<img src="image/lighter1_img45_1.jpg"  alt="MX-DT-04 NESTA BRAND">                                                                    </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4柄アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×40BOX＝800個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-116430</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>26×13×83（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>60×150×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>340×322×355（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>19ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>411ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>19.3ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img45_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2016/10/31 迷彩 -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>				                    					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>                    <div id="img">                    	<img src="image/lighter1_img43_1.jpg"  alt="MX-DT-04 迷彩">                                                                    </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×40BOX＝800個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-116348</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>26×13×83（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>60×150×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>340×322×355（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>19ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>411ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>19.3ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img43_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                            <!--2016/09/26 ＭＸ-ＤＴ-０４　キャンディ CR -->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>                                       					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[H2]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img42_1.jpg" alt="キャンディ CR MX-DT-04">       			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×40BOX＝800個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-116218</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>26×13×83（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>60×140×88（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>315×285×354（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>20ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>453ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>19.3ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img42_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                            <!--2015/08/28 LED付ターボフレームライター MX-DT-02-L -->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>                    					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img9_1.jpg" alt="LED付ターボフレームライター MX-DT-02-L">       			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（2色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×40BOX＝800個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-113422</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>26×13×83（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>63×152×85（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>330×320×370（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>21ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>460ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>19.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img9_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                 <!--2015/10/08 レオン -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img18_1.jpg"  alt="MX-DT-01 レオン">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×40BOX＝800個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-113545</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>26×12×80（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>63×152×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>335×325×350（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>19ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>425ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img18_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 レオン 迷彩 -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img19_1.jpg"  alt="MX-DT-01 レオン 迷彩">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×40BOX＝800個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-114047</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>26×12×80（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>63×152×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>335×325×350（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>19ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>425ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img19_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 アメリカンドリーム -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img20_1.jpg"  alt="TD-03R アメリカンドリーム">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×30BOX＝600個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111060</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>30×12×77（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>81×169×80（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>285×390×455（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>26ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>607ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>21.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img20_2.jpg">                                        <div class="zippo_pageup">[hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2014/3/6 北斗の腱 -->                 	<!--<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[H2]</h2>                    <div id="img">                    	<img src="./image/lighter8_img1.jpg"  alt="使いきりターボライター　TD-05R 北斗の拳">                        <p style="font-size: 11pt;"> 日本が誇る大人気漫画『北斗の拳』のライターが新登場！</p>                     </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>2014年5月</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4柄アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×40BOX＝800個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-113330</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>28×12×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>75×172×83（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>390×360×350（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>28ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>620ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>26.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter8_img2.jpg">                                        <div class="zippo_pageup">[hrefx]</div>                    </div> -->                    <!--ここまで -->                                                                                <!--2016/12/6 アイル CR -->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>                                                            <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    				                                        <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><img src="image/zippo/new2017.gif" alt="new2017" width="77" height="20"></div>                    </div>        			<div id="img">                   	  <img src="image/lighter1_img44_1.jpg" alt="MX-MF-P4 IRE（アイル） CR">                      <br><br>                      <img src="image/lighter1_img44_3.jpg" alt="MX-MF-P4 IRE（アイル） CR パッケージ">       			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>A</td><td>平置ディスプレー</td>                            </tr>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-116416</td>                            </tr>							<tr>                                <td>商品サイズ</td><td>25×12×82（ｍｍ）</td>                            </tr>							<tr>                                <td>内箱サイズ</td><td>60×135×83（ｍｍ）</td>                            </tr>							<tr>                                <td>外箱サイズ</td><td>695×330×185（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>16ｇ</td>                            </tr>                            <tr>								<td>内箱重量</td><td>358ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>19.0ｋｇ</td>                            </tr>                		</table>                                                <br>                                                <table>                             <tr>                                <td>B</td><td>吊り下げディスプレー</td>                            </tr>                            <tr>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>30個入吊り下げディスプレー<br>（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>30個入×24BOX＝720個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-116416</td>                            </tr>							<tr>                                <td>商品サイズ</td><td>25×12×82（ｍｍ）</td>                            </tr>							<tr>                                <td>内箱サイズ</td><td>325×33×165（ｍｍ）</td>                            </tr>							<tr>                                <td>外箱サイズ</td><td>420×350×340（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>16ｇ</td>                            </tr>                            <tr>								<td>内箱重量</td><td>643ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>16.5ｋｇ</td>                            </tr>                		</table>               		                                                  <div class="zippo_pageup">[hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]</div>        			</div>                    <!--ここまで -->                      <p style="clear:both;margin-top:10px;">&nbsp;</p>                                    <!--紙兎ロペ　START-->                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                   	  <img src="./image/lighter1_MX-DP-40_1.jpg" alt="MX-DP-40 紙兎ロペ">       			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（4柄アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-116201</td>                            </tr>							<tr>                                <td>商品サイズ</td><td>24×11×80（ｍｍ）</td>                            </tr>							<tr>                                <td>内箱サイズ</td><td>58×135×85（ｍｍ）</td>                            </tr>							<tr>                                <td>外箱サイズ</td><td>690×320×190（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>16ｇ</td>                            </tr>                            <tr>								<td>内箱重量</td><td>354ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>19.0ｋｇ</td>                            </tr>                		</table>               		  <img src="./image/lighter1_MX-DP-40_2.jpg" width="140px">                                                <div class="zippo_pageup">[hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]hrefx]</div>        			</div>                    <!--ここまで --><!--紙兎ろべ　END -->                                                                          <!--2016/6/20 沖縄 CR -->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>                                <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img41_1.jpg" alt="MX-DP-07R スムージーライト 沖縄 CR">                               			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（4柄アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-112784</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>24×10×80（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>58×113×85（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>590×300×185（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>16ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>340ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>18.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img41_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                 <!--2016/5/10 アイダー CR -->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>                                                                         				                                        <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img38_1.jpg" alt="MX-DP-40 アイダー CR">                               			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>50個入平置ディスプレー<br>（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>50個入×20BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-116157</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>23×10×79（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>130×127×87（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>445×275×275（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>16ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>900ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>19.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img38_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                                    <!--2015/12/09 トラストワン アニマルジュエリー -->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>                    					<!--<h2>[H2]</h2> -->                                        <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img14_1.jpg" alt="MX-DP-03R トラストワン アニマルジュエリー">       			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（4柄アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-113521</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>25×9×81（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>60×117×82（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>600×315×190（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>15ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>338ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>17.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img14_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                <!--2015/12/09 スムージーアールリラックマ -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<!--<h2>[H2]</h2> -->                                        <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>                    <div id="img">                    	<img src="image/lighter1_img15_1.jpg"  alt="MX-DP-010R スムージーアールリラックマ">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4柄アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-110827</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>25×11×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>55×160×84（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>435×340×320（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>16ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>378ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>20.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img15_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/08/28 エルザ MX-FP-2R-->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>                                                         					<div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img10_1.jpg" alt="エルザ MX-FP-2R">       			  	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-114580</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>24×9×81（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>54×110×84（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>570×290×185（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>14ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>337ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>17.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img10_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                                    <!--2015/08/28 セシル MM-DP-03-->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>					<div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img11_1.jpg" alt="セシル MM-DP-03">       			  	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-111497</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>23×10×80（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>54×115×83（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>90×285×181（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>15ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>333ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>17.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img11_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                <!--2015/08/28 ハローロジャース MM-DP-09-->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img12_1.jpg" alt="ハローロジャース MM-DP-09">       			  	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（4柄アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-115082</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>24×12×81（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>62×139×83（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>720×335×190（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>18ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>394ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>19.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img12_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                <!--2015/08/28 リモ プレイボーイ MX-DP-39R-->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img13_1.jpg" alt="リモ プレイボーイ MX-DP-39R">   			      	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-115242</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>24×12×84（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>58×133×85（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>440×280×315（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>17ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>368ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>19.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img13_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                                                         <!--2015/05/26 日本柄 -->                    <p style="clear:both;margin-top:10px;">&nbsp;</p>					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>        			<div id="img">                    	<img src="./image/lighter1_img8_1.jpg" alt="MM-DP-09 日本柄">       			 	</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td>20個入平置ディスプレー<br>（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-114818</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>24×12×81（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>62×139×83（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>720×335×190（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>18ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>394ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>19.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img8_2.jpg">                                                <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>        			</div>                    <!--ここまで -->                                                                                <!--2015/10/08 スムージーライト -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img21_1.jpg"  alt="MX-DP-07R スムージーライト">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111022</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>55×110×86（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>575×290×195（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>15ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>350ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img21_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                 <!--2015/10/08 FP-2 -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img22_1.jpg" alt="MX-FP-2R FP-2">                        <img src="image/lighter1_img22_2.jpg" alt="MX-FP-2R FP-2">                                          </div>                    <div id="text">                    <table>                        <tr>                            <td>A</td><td>50個入</td>                        </tr>                        						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>50個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>50個入×20BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111053</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>132×103×87（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>280×445×230（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>14ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>812ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>19.0ｋｇ</td>                        </tr>                    </table>                    <br>                    <table>                    	<tr>                            <td>B</td><td>2個入×10パック</td>                        </tr>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>10パック入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>10パック入×40BOX＝400個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111398</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>62×9×130（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>67×105×90（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td> 460×375×210（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>31ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>333ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>14.0ｋｇ</td>                        </tr>                    </table>                                                           <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                 <!--2015/10/08 スムージーハニー -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img23_1.jpg"  alt="MX-DP-01-TJ スムージーハニー">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>50個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>50個入×20BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-113705</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>25×11×80（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>135×120×83（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>700×270×190（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>18ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>967ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>20.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img23_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 スムージーアール  -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img24_1.jpg"  alt="MX-DP-01-R スムージーアール">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111039</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>25×11×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>57×118×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>615×310×191（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>16ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>420ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>21.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img24_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 スムージーアール ドライ -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img25_1.jpg"  alt="MX-DP-01-R スムージーアール ドライ">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（2柄アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-110834</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>25×11×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>57×118×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>615×310×191（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>16ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>420ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>21.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img25_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 ポイントビュー -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img26_1.jpg"  alt="MX-DP-35-LR ポイントビュー">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111008</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>23×12×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>53×125×84（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>438×276×293（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>20ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>432ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>23.5ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img26_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 スムージー ライトビュー -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img27_1.jpg"  alt="MX-DP-01-LR スムージー ライトビュー">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-110988</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×11×80（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>55×162×91（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>470×350×300（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>20ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>432ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>22.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img27_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                            <!--2015/10/08 リモ -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img28_1.jpg"  alt="MX-DP-39R リモ">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-112340</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×12×84（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>58×133×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>440×280×315（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>17ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>368ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>19.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img28_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                            <!--2015/10/08 ポップ -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img29_1.jpg"  alt="MX-DP-25R ポップ">                        <img src="image/lighter1_img29_2.jpg"  alt="MX-DP-25R ポップ">                                          </div>                    <div id="text">                    <table>                    	<tr>                            <td>A</td><td>20個入</td>                        </tr>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-110964</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>21×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>53×125×88（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>460×270×290（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>13ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>370ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                    <br>                                         <table>                     	<tr>                            <td>B</td><td>50個入</td>                        </tr>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>50個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>50個入×20BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-110964</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>21×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>127×127×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>450×265×280（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>13ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>862ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                                                         <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 キーオ -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img30_1.jpg" alt="MX-DP-36R キーオ">                        <img src="image/lighter1_img30_2.jpg" alt="MX-DP-36R キーオ">                                           </div>                    <div id="text">                    <table>						<tr>                            <td>A</td><td>50個入</td>                        </tr>                                                <tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>50個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>50個入×20BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111169</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×11×83（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>131×131×86（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>276×678×189（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>17ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>942ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>21.0ｋｇ</td>                        </tr>                    </table>                    <br>                                        <table>						<tr>                            <td>B</td><td>2個入×10パック</td>                        </tr>                                                <tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>10パック入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>10パック入×40BOX＝400個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111213</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>66×11×126（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>65×125×92（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>348×270×393（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>35ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>398ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>17.0ｋｇ</td>                        </tr>                    </table>                                                            <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 エックスライトモア -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img31_1.jpg"  alt="MX-MF-P3R エックスライトモア">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111046</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×11×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>58×145×83（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>435×310×310（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>14ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>380ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>19.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img31_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 MM-DP-02 -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img32_1.jpg"  alt="MM-DP-02">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>50個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>50個入×20BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>単品JANコードはございません。<br>ボックスJANコードはお問い合わせ下さい。</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×10×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>140×115×84（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>595×292×185（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>14ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>809ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img32_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                             <!--2015/10/08 トラストワン 豹柄 -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img34_1.jpg"  alt="MX-DP-03R トラストワン 豹柄">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111121</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>25×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>60×117×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>600×315×190（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>15ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>338ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>17.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img34_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 トラストワン バタフライ -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img35_1.jpg"  alt="MX-DP-03R トラストワン バタフライ">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（2色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111138</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>25×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>60×117×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>600×315×190（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>15ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>338ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>17.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img35_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                             <!--2015/10/08 スムージーライト アニマル -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img36_1.jpg"  alt="MX-DP-07R スムージーライト アニマル">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4柄アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-112517</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>57×113×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>590×310×185（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>15ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>345ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img36_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                            <!--2013/12/17 くまモン -->                 	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img7_1.jpg"  alt="使い切り電子ライター　MX-DP-07R スムージーライト/くまモン">                        <p> 熊本発の大人気キャラクター『くまモン』のライターが新登場！</p>                    </div>                    <div id="text">                    <table>			<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4柄アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-113439</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>57×113×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>590×310×185（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>15ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>345ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img7_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで-->                                        <!--2013/11/5 海物語挿入-->                 	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img6_1.jpg"  alt="使い切り電子ライター　MX-DP-07R スムージーライト/海物語">                     </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5柄アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-112906</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>55×113×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>590×310×185（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>15ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>345ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img6_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで-->                                                               <!--2015/10/08 スムージーライト すみっコぐらし -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                    <div id="img">                    	<img src="image/lighter1_img37_1.jpg"  alt="MX-DP-07R スムージーライト すみっコぐらし">                                            </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4柄アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-113712</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>24×9×81（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>57×113×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>590×310×185（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>15ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>345ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>18.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img37_2.jpg">                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                    					                    <!--ここから-->                                     	<!--<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[H2]</h2>                    <div id="img">                    	<img src="image/lighter1_img4_1.jpg"  alt="使い切り電子ライター　MX-DP-010R スムージーアール　リラックマ/ハワイ">                        <p style="font-size:11pt;">2013年、リラックマは10周年！！10周年記念イヤーの第１弾シリーズ「アロハリラックマ」は、カラフルでPOPなカラーリングが魅力的なデザインです。</p>                    </div>                    <div id="text">                    <table>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（4柄アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-110827</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>25×11×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>55×160×84（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>435×340×320（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>16ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>378ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>20.0ｋｇ</td>                        </tr>                    </table>                    <img src="./image/lighter1_img4_2.jpg">                                        <div class="zippo_pageup">[hrefx]</div>                    </div> -->                                                                             	<!--<p style="clear:both;margin-top:10px;">&nbsp;</p>                                        <h2>[H2]</h2>                	<div id="img">                	<img src="image/lighter1_img1.jpg" />                	</div>                	<div id="text">                    <table>                       <tr>                           <td>発売予定日</td><td>発売中</td>                       </tr>                       <tr>                           <td>仕様</td><td>50個入平置ディスプレー<br />（5色アソート）</td>                       </tr>                       <tr>                           <td>入数</td><td>50個入×20BOX＝1,000個入</td>                       </tr>                       <tr>                           <td>メーカー希望小売価格</td><td>オープンプライス</td>                       </tr>                       <tr>                           <td>JANコード</td><td>なし&nbsp;</td>                       </tr>                       <tr>                           <td>商品サイズ</td><td>24×12×81（ｍｍ）</td>                       </tr>                       <tr>                           <td>内箱サイズ</td><td>136×135×85（ｍｍ）</td>                       </tr>                       <tr>                           <td>外箱サイズ</td><td>690×285×190（ｍｍ）</td>                       </tr>                       <tr>                           <td>商品重量</td><td>17ｇ</td>                       </tr>                       <tr>                           <td>内箱重量</td><td>908ｇ</td>                       </tr>                       <tr>                           <td>外箱重量</td><td>19.0ｋｇ</td>                       </tr>                     </table>                     <img src="image/lighter1_img2.jpg" />                                          <div class="zippo_pageup">[hrefx]</div>                    </div> -->					<!--<p style="clear:both;margin-top:10px;">&nbsp;</p>					<h2>[H2]</h2>        			<div id="img">                    	<img src="./image/lighter1_img2_1.jpg">        			</div>        			<div id="text">	        			<table>                            <tr>                                <td>発売予定日</td><td>発売中</td>                            </tr>                            <tr>                                <td>仕様</td><td> 20個入平置ディスプレー<br />（5色アソート）</td>                            </tr>                            <tr>                                <td>入数</td><td>20個入×50BOX＝1,000個入</td>                            </tr>                            <tr>                                <td>メーカー希望小売価格</td><td>オープンプライス</td>                            </tr>                            <tr>                                <td>JANコード</td><td>4977648-110971</td>                            </tr>                            <tr>                                <td>商品サイズ</td><td>25×11×80（ｍｍ）</td>                            </tr>                            <tr>                                <td>内箱サイズ</td><td>55×162×84（ｍｍ）</td>                            </tr>                            <tr>                                <td>外箱サイズ</td><td>430×340×305（ｍｍ）</td>                            </tr>                            <tr>                                <td>商品重量</td><td>17ｇ</td>                            </tr>                            <tr>                                <td>内箱重量</td><td>381ｇ</td>                            </tr>                            <tr>                                <td>外箱重量</td><td>20.0ｋｇ</td>                            </tr>                		</table>                		<img src="./image/lighter1_img2_2.jpg">                                                <div class="zippo_pageup">[hrefx]</div>        			</div> -->                                                                                                    <!--2017/3/24 ドロップ CR -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>                                        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><img src="image/zippo/new2017.gif" alt="new2017" width="77" height="20"></div>                    </div>                                        <div id="img">                    	<img src="image/lighter1_img46_1.jpg"  alt="ドロップ CR">                                            </div>                    <div id="text">                    <table>                       						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-116782</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>22×11×75（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>55×135×80（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>420×290×310（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>13ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>300ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>16.0ｋｇ</td>                        </tr>                    </table>                                        <img src="./image/lighter1_img46_2.jpg">                                                            <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                 <!--2016/5/10 マーブルネオ CR -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>                                        					                    <div class="item_ti_bg clearfix">                      <div class="item_ti_name_year"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2></div>                      <div class="item_ti_new_year"><!--<img src="image/zippo/new2016.gif" alt="new2016" width="77" height="20"> --></div>                    </div>                                        <div id="img">                    	<img src="image/lighter1_img39_1.jpg"  alt="マーブルネオ CR">                                            </div>                    <div id="text">                    <table>                       						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111794</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>23×10×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>58×132×85（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>440×285×300（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>16ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>360ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>19.0ｋｇ</td>                        </tr>                    </table>                                        <img src="./image/lighter1_img39_2.jpg">                                                            <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                                                                                <!--2015/10/08 バース -->                                     	<p style="clear:both;margin-top:10px;">&nbsp;</p>                                      					<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                                        <div id="img">                    	<img src="image/lighter1_img33_2.jpg"  alt="バース">                        <img src="image/lighter1_img33_1.jpg"  alt="バース">                        <img src="image/lighter1_img33_3.jpg"  alt="バース">                                             </div>                    <div id="text">                    <table>                        <tr>                            <td>A</td><td>3個入×10パック</td>                        </tr>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>10パック入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>10パック入×30BOX＝300個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111206</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>85×11×130（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>90×125×89（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>420×380×182（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>52ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>560ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>17.0ｋｇ</td>                        </tr>                    </table>                    <br>                    <table>                        <tr>                            <td>B</td><td>20個入</td>                        </tr>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>20個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>20個入×50BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111633</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>23×11×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>58×133×84（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>435×278×313（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>17ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>363ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>19.0ｋｇ</td>                        </tr>                    </table>                    <br>                    <table>                        <tr>                            <td>C</td><td>50個入</td>                        </tr>						<tr>                            <td>発売予定日</td><td>発売中</td>                        </tr>                        <tr>                            <td>仕様</td><td>50個入平置ディスプレー<br />（5色アソート）</td>                        </tr>                        <tr>                            <td>入数</td><td>50個入×20BOX＝1,000個入</td>                        </tr>                        <tr>                            <td>メーカー希望小売価格</td><td>オープンプライス</td>                        </tr>                        <tr>                            <td>JANコード</td><td>4977648-111145</td>                        </tr>                        <tr>                            <td>商品サイズ</td><td>23×11×82（ｍｍ）</td>                        </tr>                        <tr>                            <td>内箱サイズ</td><td>129×129×84（ｍｍ）</td>                        </tr>                        <tr>                            <td>外箱サイズ</td><td>435×276×278（ｍｍ）</td>                        </tr>                        <tr>                            <td>商品重量</td><td>17ｇ</td>                        </tr>                        <tr>                            <td>内箱重量</td><td>914ｇ</td>                        </tr>                        <tr>                            <td>外箱重量</td><td>19.0ｋｇ</td>                        </tr>                    </table>                                        <div class="zippo_pageup">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                    <!--ここまで -->                				</div>			</div>		<!-- InstanceEndEditable -->	  </div>	</div>            <!-- ▼footer▼ -->    <div id="footer_wid">      <div id="footer">         <div id="ft_link">            <ul>            	<li>&#9654;[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>			<li>&#9654;[hrefx][hrefx][hrefx][hrefx]</li>			   		  </ul>                  </div>                  <div id="ft_iine"class="fb-like" data-layout="button_count">				<iframe src="//www.facebook.com/plugins/like.php?&amp;href=https%3A%2F%2Fwww.facebook.com%2F株式会社ライテック-1458314677725880/?fref=ts&amp;width=75&amp;height=25&amp;colorscheme=light&amp;layout=button_count&amp;action=like&amp;show_faces=false&amp;send=true" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:178px; height:20px;" allowTransparency="true"></iframe>         </div><!--facebook いいねボタン -->                           <div id="ft_adress">         	<p><strong>株式会社ライテック LIGHTEC Inc.</strong>　　　〒111-0053 東京都台東区浅草橋2-13-9     l      TEL.03-3861-5151     l      FAX.03-3851-2289　　　　&copy; LIGHTEC Inc.         	</p>         </div>         	  </div><!--footer終 -->    </div><!--footer_wid終 -->    <!-- ▲footer▲-->      <script type="text/javascript">  var _gaq = _gaq || [];  _gaq.push(['_setAccount', 'UA-26379841-1']);  _gaq.push(['_trackPageview']);  (function() {    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);  })();</script></body><!-- InstanceEnd --></html>