<!DOCTYPE html><!--[if IE 8]><html class="ie8"><![endif]--><!--[if IE 9]><html class="ie9"><![endif]--><!--[if gt IE 9]><!--><html xmlns:fb="http://www.facebook.com/2008/fbml" lang="jp"><!--><![endif]--><head>	<meta http-equiv="Content-Type" charset="UTF-8" />	<meta name="viewport" content="width=device-width">	<meta name="format-detection" content="telephone=no" />	<title>[metatags_title]</title>	<meta name="keywords" content="[metatags_keywords]"/>	<meta name="description" content="[metatags_description]" />	  <meta property="og:type" content="article"/>	<meta property="og:site_name" content="TIME&SPACE" />	<meta property="og:url" content="https://time-space.kddi.com/ict-keywords/kaisetsu/20170725/2052" />	<meta property="og:title" content="携帯電話の「060」がまもなく開放。そもそも「090」「080」「070」の違い、知ってる？" />	<meta property="og:description" content="TIME & SPACEは、KDDIがお届けするITｘカルチャーマガジンです。"/>	<meta property="og:image" content="https://tspace-prod.s3.amazonaws.com/eyecatch/584b98aac2dddf59ee2cf19ca4ccb75e/fea087517c26fadd409bd4b9dc642555.jpg" />  <meta property="og:image:width" content="684" />  <meta property="og:image:height" content="393" />	<meta property="fb:admins" content="100002509977286,1058975363" />			<link rel="canonical" href="https://time-space.kddi.com/ict-keywords/kaisetsu/20170725/2052"/>		<link rel="shortcut icon" href="/favicon.ico" type="image/vnd.microsoft.icon" />	<link rel="icon" href="/favicon.ico" type="image/vnd.microsoft.icon" />	<link rel="apple-touch-icon" href="/apple-touch-icon.png" />	<link rel="stylesheet" href="https://time-space.kddi.com/common/css/common.css?20170705" media="screen,print" />			<link rel="stylesheet" href="https://time-space.kddi.com/common/css/post.css?20170628" media="screen,print" />		<link rel="stylesheet" href="https://time-space.kddi.com/common/css/pc.css?20170622" media="screen,print" />	<link rel="stylesheet" href="https://time-space.kddi.com/common/css/sp.css?201707070403" media="screen,print" />	<link rel="stylesheet" href="https://time-space.kddi.com/common/css/style.css?20170623" media="screen,print" />	<script src="https://time-space.kddi.com/common/js/lib/jquery-1.11.2.min.js?20170622" type="text/javascript"></script>	<script src="https://time-space.kddi.com/common/js/lib/jquery.tween.js?20170622" type="text/javascript"></script>	<script src="https://time-space.kddi.com/common/js/lib/jquery.xdomainajax.js?20170622" type="text/javascript"></script>	<script src="https://time-space.kddi.com/common/js/assets.js?v=1" type="text/javascript"></script>	<script type="text/javascript">		var viewport = document.querySelector("meta[name=viewport]");		if ( Device.isMobile() ) {			viewport.setAttribute('content', 'width=device-width, initial-scale=1.0');		} else {			viewport.setAttribute('content', 'width=1024');		}	</script>	<script src="https://time-space.kddi.com/common/js/modules.js?20170714" type="text/javascript"></script>	<script src="https://time-space.kddi.com/common/js/init.js?20170622" type="text/javascript"></script>	<script src="https://time-space.kddi.com/common/js/init-index.js?20170622" type="text/javascript"></script>	<!--[if lt IE 9]>	<script src="/common/js/lib/html5shiv.js"></script>	<![endif]-->	<!--[if IE 6]>	<script src="/common/js/lib/DD_belatedPNG_0.0.8a-min.js"></script>	<script>	DD_belatedPNG.fix('img, .png'); </script>	<![endif]-->	<!--DTM code-->	<script src="//assets.adobedtm.com/d428a01711e18e05d6f7753f06b1071b5722fb3e/satelliteLib-2e509822a3eb51601434035d5ad4a0f29932620e.js"></script>	<!--/DTM code-->		<!-- Outbrain_PVタグ start -->	<script src="//api.triver.jp/adlogue/api/tag/onetag/?b=70GwF&t=9PTC"></script>	<!-- Outbrain_PVタグ end -->	</head><body class="ictKeywords logout base-up" data-category="ictKeywords">		<div id="fb-root"></div>	<script>(function(d, s, id) {		var js, fjs = d.getElementsByTagName(s)[0];		if (d.getElementById(id)) return;		js = d.createElement(s); js.id = id;		js.src = "//connect.facebook.net/ja_JP/sdk.js#xfbml=1&version=v2.0";		fjs.parentNode.insertBefore(js, fjs);	}(document, 'script', 'facebook-jssdk'));</script>	<!-- Google Plus -->	<script src="https://apis.google.com/js/platform.js" async defer></script>	<!-- end Google Plus -->	<script type="text/javascript">	// facebook	window.fbAsyncInit = function() {		FB.init({			version    : 'v2.0',			status     : false,			cookie     : true,			xfbml      : true		});		FB.Event.subscribe('edge.create',			function(response) {				socialclickCount('ts-all-facebook');			}		);	};	// twitter 	window.twttr = (function (d,s,id) {		var t, js, fjs = d.getElementsByTagName(s)[0];		if (d.getElementById(id)) return; js=d.createElement(s); js.id=id;		js.src="https://platform.twitter.com/widgets.js";		fjs.parentNode.insertBefore(js, fjs);		return window.twttr || (t = { _e: [], ready: function(f){ t._e.push(f) } });	}(document, "script", "twitter-wjs"));	twttr.ready(function (twttr) {		twttr.events.bind('tweet', function(event) {			socialclickCount('ts-all-twitter');		});		twttr.events.bind("follow", function (event) {			var followed_user_id = event.data.user_id;			var followed_screen_name = event.data.screen_name;			socialclickCount('ts-all-twitter');		});	});	</script>	<div class="headerWrapper">     <!-- GLOBAL HEADER start -->  <header class="globalHeader">    <div class="functionalParts">      <div class="sns"> <span class="fb">         <!--<iframe class="fb-like" src="//www.facebook.com/plugins/like.php?href=https%3A%2F%2Fwww.facebook.com%2Ftimeandspaceonline&amp;width&amp;layout=button_count&amp;action=like&amp;show_faces=false&amp;share=false&amp;height=21&amp;appId=1478458182417978" scrolling="no" frameborder="0" style="border:none; overflow:hidden; height:21px;" allowTransparency="true"></iframe>-->         <!-- 160202 -->        <div class="fb-like" data-href="https://www.facebook.com/timeandspaceonline/" data-layout="button_count" data-action="like" data-show-faces="true" data-share="false"></div>        <!-- 160202 -->         </span>                 <!-- 151207 -->         <span class="tweet"> [hrefx] [hrefx][hrefx][hrefx]        <!--<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>-->         </span>         <!-- /151207 -->                 <!-- 151207 -->         <span class="googleplus">        <g:plusone href="http://time-space.kddi.com/"></g:plusone>        </span>         <!-- /151207 -->                 <!-- 151207 -->         <span class="hatebu"> [hrefx][hrefx][hrefx][hrefx]<script type="text/javascript" src="https://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async></script>         </span>         <!-- /151207 -->                 <!-- 151207 -->         <span class="grss"> <a class="rss" href="/news_rss.xml" target="_blank" onclick="socialclickCount('ts_global_rss')">RSS</a> </span>         <!-- /151207 -->       </div>           <!--        ********************************        検索画面仕様変更 - 160628        ********************************        -->      <form name="SS_searchForm" id="SS_searchForm" class="searchform" action="https://site-search.kddi.com/search" method="get" enctype="application/x-www-form-urlencoded">        <input type="hidden" name="site" value="2KZ9WLFD" />        <input type="hidden" name="charset" value="UTF-8" />        <input type="hidden" name="design" value="20" />        <input type="hidden" name="group" value="20" />        <input type="text" name="query" value="" id="SS_searchQuery" class="searchBox" maxlength="100" />        <input type="submit" name="submit" value="検索" class="searchbutton" id="SS_searchSubmit" />      </form>      <!--        ********************************        / 検索画面仕様変更 - 160628 ここまで        ********************************        -->         </div>    <div class="logo"><a href="/">      <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>      </a>    </div>            <div class="headerBanner">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      <span class="close"></span>    </div>        <!-- /151207 -->       </header>  <!-- GLOBAL HEADER end -->     <!-- CATEGORY MENU start -->  <nav class="categoryMenu">    <div class="categoryMenuWrapper">      <ul id="CATEGORY_MENU_LIST" class="menuList">        <li class="new">[hrefx][hrefx][hrefx]</li>        <li class="present">[hrefx][hrefx][hrefx]</li>        <li class="feature">[hrefx][hrefx][hrefx]</li>        <li class="digiculColumn">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="kddiNow">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="ictKeywords">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="bonus">[hrefx][hrefx][hrefx][hrefx]</li>      </ul>    </div>    <div id="BALLOONS_WRAPPER" class="balloonsWrapper">      <div id="BALLOON_NEW" class="balloon">        <p class="title">TOP</p>        <p class="lead">編集部が独自視点でお送りするオススメ情報はこちら！</p>      </div>      <div id="BALLOON_PRESENT" class="balloon">        <p class="title">プレゼント</p>        <p class="lead">記事で話題になったグッズやイベントなどメンバー限定で毎月プレゼント！</p>      </div>      <div id="BALLOON_FEATURE" class="balloon">        <p class="title">特集</p>        <p class="lead">編集部激選ネタを濃厚取材！</p>      </div>      <div id="BALLOON_DIGICUL" class="balloon">        <p class="title">ITコラム</p>        <p class="lead">世界中のIT情報やおもしろ情報を体を張ってお届け！</p>      </div>      <div id="BALLOON_NOW" class="balloon">        <p class="title">KDDI ナウ</p>        <p class="lead">プレスリリースにはないKDDIの最新情報や現場の臨場感をお届け</p>      </div>      <div id="BALLOON_ICT" class="balloon">        <p class="title">IT用語辞典</p>        <p class="lead">いまさら聞けない、こっそり知っておきたい IT用語はこちら！</p>      </div>      <div id="BALLOON_BONUS" class="balloon">        <p class="title">BONUS</p>        <p class="lead">情報洪水に疲れた時はこちら！</p>      </div>    </div>  </nav>  <!-- CATEGORY MENU end --></div><!-- .headerWrapper -->	<link rel="stylesheet" href="https://time-space.kddi.com/common/css/post_201503.css" media="screen,print" /><script src="https://time-space.kddi.com/common/js/init-post.js?garajd" type="text/javascript"></script><link rel="stylesheet" href="https://time-space.kddi.com/common/css/jquery.lightbox-0.5.css" media="screen,print" /><script type="text/javascript" src="https://time-space.kddi.com/common/js/jquery.lightbox-0.5.min.js"></script><script type="text/javascript">  $(function(){   $('a[rel*=lightbox]').lightBox({        overlayBgColor:'#666',        imageLoading:'/common/images/lightbox-ico-loading.gif',        imageBtnClose:'/common/images/lightbox-btn-close.gif',        imageBtnPrev:'/common/images/lightbox-btn-prev.gif',        imageBtnNext:'/common/images/lightbox-btn-next.gif',        containerResizeSpeed:350,        containerBorderSize:10   });   $('.detailInfoNone').parents('.relevance').css("display","none");   $('.detailInfoBlock').parents('.relevance').css("display","block");  });</script><div id="CONTENTS_WRAP" class="contentsWrapper">	<!-- MAIN CONTENTS start -->	<article class="detailContents detailContentsOld detailContentsTxt">		<div class="detailMain">			<section class="cornerTitle">				<h1>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h1>			</section>			<div class="detailMainTxt">				<p class="detailMainDate">2017/07/25</p>				<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>				<ul class="detailMainSns">					<li class="fb">				            <div class="fb-like" data-href="https://time-space.kddi.com/ict-keywords/kaisetsu/20170725/2052" data-layout="button" data-action="like" data-show-faces="true" data-share="false"></div>            <div class="fb-share-button-custom">              <a class="fb-share-popup-link" href="http://www.facebook.com/sharer.php?u=https://time-space.kddi.com/ict-keywords/kaisetsu/20170725/2052" onclick="window.open( this.href, 'FBwindow', 'width=650, height=450, menubar=no, toolbar=no, scrollbars=yes' ); socialclickCount('ts-all-facebook'); return false;"></a>              <span class="fb-share-count-custom" data-url="https://time-space.kddi.com/ict-keywords/kaisetsu/20170725/2052"></span>            </div>					</li>					<li class="tweet">            [hrefx][hrefx][hrefx][hrefx][hrefx]					</li>          <li class="googleplus">            <g:plusone href="https://time-space.kddi.com/ict-keywords/kaisetsu/20170725/2052"></g:plusone>          </li>          <li class="hatebu">						[hrefx][hrefx][hrefx][hrefx]<script type="text/javascript" src="https://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"></script>					</li>          <li class="line">            <span onclick="socialclickCount('ts_article_line')">              <script type="text/javascript" src="//media.line.me/js/line-button.js?v=20140411" ></script>              <script type="text/javascript">                new media_line_me.LineButton({"pc":false,"lang":"ja","type":"a","text":"携帯電話の「060」がまもなく開放。そもそも「090」「080」「070」の違い、知ってる？","withUrl":true});              </script>            </span>          </li>					 <li class="pocket">[hrefx][hrefx][hrefx][hrefx]</li>				</ul>			</div>					</div>		<div class="detailContentsInner">      <!--section IN--><section>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]<!--section OUT-->[metatags_descriptionx]                                          <div class="articleFixedSns">        <div class="wrapper">          <ul id="fixed-sns-buttons" class="sns-buttons hide" data-url="https://time-space.kddi.com/ict-keywords/kaisetsu/20170725/2052">            <li class="facebook">              <a href="" onclick="window.open( this.href, 'FBwindow', 'width=650, height=450, menubar=no, toolbar=no, scrollbars=yes' ); socialclickCount('ts-all-facebook'); return false;">                <span id="fixed-facebook-button-number" class="number">0</span>              </a>            </li>            <li class="twitter">              <a href="" data-hashtags="" onclick="window.open( this.href, 'new', 'width=650, height=450, menubar=no, toolbar=no, scrollbars=yes' ); return false;"></a>            </li>            <li class="googleplus">              <a href="" onclick="window.open( this.href, 'HBwindow', 'width=500, height=500, menubar=no, toolbar=no, scrollbars=yes' ); return false;"></a>            </li>            <li class="hatebu">              <a href="" class="hatena-bookmark-button" data-hatena-bookmark-layout="simple" onclick="">                <span id="fixed-hatebu-button-number" class="number">0</span>              </a>            </li>            <li class="line">              <a href="" data-title="携帯電話の「060」がまもなく開放。そもそも「090」「080」「070」の違い、知ってる？" onclick="socialclickCount('ts_article_line')"></a>            </li>            <li class="pocket"><a href="" onclick="window.open( this.href, 'HBwindow', 'width=500, height=500, menubar=no, toolbar=no, scrollbars=yes' ); socialclickCount('ts_article_pocket'); return false;"></a></li>          </ul>        </div>      </div>		</div>		<section class="detailLink">                    <div class="relevance" id="RELATED_LINKS">          <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>          <ul>                                          <li>[hrefx][hrefx][hrefx]</li>                               <li>[hrefx][hrefx][hrefx]</li>                                              <li>[hrefx][hrefx][hrefx]</li>                                                   </ul>        </div>      		  <dl id="KEYWORD_LINKS" class="keywordList">				<dt>キーワードで他の記事を探す：</dt>				<dd>                      [hrefx][hrefx][hrefx][hrefx]                      [hrefx][hrefx][hrefx][hrefx]                      [hrefx][hrefx][hrefx][hrefx]                      [hrefx][hrefx][hrefx][hrefx]          				</dd>			</dl>    </section>    <section id="RECOMMEND_LINKS" class="detailRecommendLinks"></section>	</article>	<!-- MAIN CONTENTS end -->	<!-- SIDEBAR start --><aside id="SIDE_BAR" class="subContents">  <!-- logoutArea start -->  <section class="logoutArea">    <div class="box aboutBtn">      [hrefx][hrefx][hrefx][hrefx][hrefx]    </div>        <div class="box memberArea">      <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>      <p class="copy_pc">メンバーになってもっと<br>TIME&amp;SPACEを楽しもう！</p>      <p class="copy_sp">登録すると楽しいコトたくさん！</p>      <p class="txt">TIME&amp;SPACEで話題のアイテムのプレゼントや記事の取材同行企画、メンバー限定イベントへのご招待などお得なサービスがいっぱい！<br>      <span class="more">[hrefx]</span></p>      <div class="btnArea">        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]      </div>    </div>  </section>  <!-- logoutArea end -->  <section class="viewRanking">    <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>          <a href="https://time-space.kddi.com/ict-keywords/kaisetsu/20170725/2052" class="post ictKeywords">        <div class="rank01">1</div>        <div class="image"><img src="https://tspace-prod.s3.amazonaws.com/eyecatch/584b98aac2dddf59ee2cf19ca4ccb75e/ee240fe51687ee66cca7493aedcc3c24.jpg" alt="" /></div>        <div class="text">          <p class="category">            IT用語辞典          </p>          <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>        </div>      </a>          <a href="https://time-space.kddi.com/feature/genbadamashii-sp/20170725/2051" class="post feature">        <div class="rank02">2</div>        <div class="image"><img src="https://tspace-prod.s3.amazonaws.com/eyecatch/a9813e9550fee3110373c21fa012eee7/ee240fe51687ee66cca7493aedcc3c24.jpg" alt="" /></div>        <div class="text">          <p class="category">            特集          </p>          <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>        </div>      </a>          <a href="https://time-space.kddi.com/kddi-now/tsushin-chikara/20170710/2034" class="post kddiNow">        <div class="rank03">3</div>        <div class="image"><img src="https://tspace-prod.s3.amazonaws.com/eyecatch/d198bd736a97e7cecfdf8f4f2027ef80/ee240fe51687ee66cca7493aedcc3c24.jpg" alt="" /></div>        <div class="text">          <p class="category">            KDDI ナウ          </p>          <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>        </div>      </a>          <a href="https://time-space.kddi.com/kddi-now/kddi-news/20170727/2054" class="post kddiNow">        <div class="rank04">4</div>        <div class="image"><img src="https://tspace-prod.s3.amazonaws.com/eyecatch/955cb567b6e38f4c6b3f28cc857fc38c/ee240fe51687ee66cca7493aedcc3c24.jpg" alt="" /></div>        <div class="text">          <p class="category">            KDDI ナウ          </p>          <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>        </div>      </a>          <a href="https://time-space.kddi.com/digicul-column/world/20170707/2032" class="post digiculColumn">        <div class="rank05">5</div>        <div class="image"><img src="https://tspace-prod.s3.amazonaws.com/eyecatch/5352696a9ca3397beb79f116f3a33991/ee240fe51687ee66cca7493aedcc3c24.jpg" alt="" /></div>        <div class="text">          <p class="category">            ITコラム          </p>          <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>        </div>      </a>      </section>  <!-- OUTBRAIN start -->  <section class="recommend"></section>  <!-- OUTBRAIN end -->  <div class="fbLikeBox">    <div class="fb-like-box" data-href="https://www.facebook.com/timeandspaceonline" data-width="254" data-height="361" data-colorscheme="light" data-show-faces="true" data-header="false" data-stream="false" data-show-border="true"></div>  </div>          <!-- 151207 -->  <section class="twTimeline">     <a class="twitter-timeline" href="https://twitter.com/ts_kddi" data-widget-id="671250300272013312" data-chrome="nofooter" >    </a>     <script>!function(d,s,id){    var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';    if(!d.getElementById(id)){    js=d.createElement(s);    js.id=id;    js.src=p+"://platform.twitter.com/widgets.js";    fjs.parentNode.insertBefore(js,fjs);    }    }    (document,"script","twitter-wjs");    </script>   </section>  <!-- /151207 -->   <section>          <div class="banner">        <a href="https://renderer.apester.com/interaction/596dadf35ef522b21624cba5?preview=true" target="_blank">          <img src="https://tspace-prod.s3.amazonaws.com/banners/1679091c5a880faf6fb5e6087eb1b2dc.png" />        </a>      </div>          <div class="banner">        <a href="http://time-space.kddi.com/statics/best.html" target="_blank">          <img src="https://tspace-prod.s3.amazonaws.com/banners/eccbc87e4b5ce2fe28308fd9f2a7baf3.jpg" />        </a>      </div>          <div class="banner">        <a href="https://time-space.kddi.com/adp15th/" target="_blank">          <img src="https://tspace-prod.s3.amazonaws.com/banners/e4da3b7fbbce2345d7772b0674a318d5.png" />        </a>      </div>          <div class="banner">        <a href="http://time-space.kddi.com/ketaizukan/index.html?bid=co_prts_kzk_0052" target="_blank">          <img src="https://tspace-prod.s3.amazonaws.com/banners/c4ca4238a0b923820dcc509a6f75849b.png" />        </a>      </div>          <div class="banner">        <a href="http://time-space.kddi.com/omoide/index.php?bid=co_prts_otl_0093" target="_blank">          <img src="https://tspace-prod.s3.amazonaws.com/banners/c81e728d9d4c2f636f067f89cc14862c.jpg" />        </a>      </div>      </section>    </aside><!-- SIDEBAR end --></div><!-- .contentsWrapper -->	<footer class="globalFooter">	<div class="pageTopLinkWrapper"> <a id="GOTO_PAGETOP" class="pageTopLink" href="#" title="">PAGE TOP</a> </div>  <section class="corporateMenuWrapper">    <div class="corporateMenu">              <div class="corporateLinkList">          <ul class="over">            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>          </ul>          <ul class="under">            <li>[hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          </ul>        </div>            <p class="kddiLogo">[hrefx]</p>    </div>  </section>	<section class="copyRightWrapper">		<div class="copyRightContents">			<p class="siteName">TIME &amp; SPACE</p>			<p class="catchCopy">KDDIがお届けするIT ✕ カルチャーマガジン</p>			<p class="copyRight">COPYRIGHT &copy; KDDI CORPORATION, ALL RIGHTS RESERVED.</p>		</div>	</section></footer>	<div id="mypage"> <a id="mypageCloseBtn" class="mypageclose"><span>CLOSE</span></a>	<div class="mypageBody">		<div class="mypageOver">			<div class="box">				<div class="profile">					<div class="profile_thumb"><img src=""></div>					<div class="profile_name">						<p class="name">さん</p>					</div>				</div>			</div>					</div><!--/.mypageOver-->				<div class="mypageUnder">			<div class="box">				[hrefx][hrefx][hrefx][hrefx]				[hrefx][hrefx][hrefx][hrefx]			</div>			<div class="box line_o btn_half">				[hrefx][hrefx][hrefx][hrefx][hrefx]				[hrefx][hrefx][hrefx][hrefx][hrefx]			</div>		</div><!-- /.mypageUnder -->	</div><!-- /.mypageBody --></div><!-- /#mypage -->	<!-- scale out start -->	<!-- BEGIN TAG MGMT DO NOT MODIFY -->	<script type="text/javascript">	(function(w,d,S,P,s,t,u) {	  u = ('https:' == d.location.protocol ? 'https://tg.socdm.com' : 'http://tg.socdm.com') + '/so-async.js?' + 'siteid=' + s;	  t=(t=d.getElementsByTagName(S))[t.length-1];	  (w[P]=w[P]||{})[s]=t.id=[P,s].join('-');	  s=d.createElement(S);s.async=!0;s.src=u;	  t.parentNode.insertBefore(s,t);	})(window,document,'script','scaleout-tagmanagement','47729');	</script>	<!-- END TAG MGMT -->	<!-- scale out end -->	<!--	********************************	検索画面仕様変更 - 160628	********************************	-->	<!-- SyncSearch Suggest start -->	<script type="text/javascript">	document.write(unescape('%3Cscript src="https://media3.kddi.com/extlib/js/sync_suggest.js" type="text/javascript"%3E%3C/script%3E'));	</script>	<script type="text/javascript">	SYNCSEARCH_SITE="2KZ9WLFD";	SYNCSEARCH_GROUP=20;	</script>	<!-- SyncSearch Suggest end -->	<!--	********************************	/ 検索画面仕様変更 - 160628 ここまで	********************************	-->	<!-- SiteCatalyst start -->	<div id="scimage" style="visibility: hidden;z-index:2;position:absolute;top:-100px;left:-100px;">		<!--SC vars-->		<script language="JavaScript">		var _sc = _sc || {};				</script>		<!--/SC vars-->	</div>	<!-- SiteCatalyst end -->				<!-- popIn start -->		<script type="text/javascript">			(function() {				var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.charset = "utf-8"; pa.async = true;				pa.src = window.location.protocol + "//api.popin.cc/searchbox/time-space_kddi.js";				var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);			})();		</script>		<!-- popIn end -->		<!-- Outbrain_カスタムオーディエンスタグ start -->	<img src="//amplifypixel.outbrain.com/pixel?mid=00faca0fa037f4df8b8d0cc502c6a8927c" style="display:none" />	<!-- Outbrain_カスタムオーディエンスタグ end -->	<!-- Outbrain_trendemonタグ start -->	<!-- TrenDemon Code -->	<script type="text/javascript" id="trd-flame-load">	var JsDomain = "https://prod.trendemon.com/apis/loadflame/mainflamejs";	var param = "aid=1800&uid=1819&baseurl=https%3A%2F%2Fprod.trendemon.com%2F&appid=208770359181748";	(function (w, d) {	function go() {	setTimeout(function () {	var bi = document.createElement("script"); bi.type = "text/javascript"; bi.async = true;	bi.src = JsDomain + "?" +param;	bi.id  = "trdflame";	var s  = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(bi, s);	}, 500);	}	if (w.addEventListener) { w.addEventListener("load", go, false); }	else if (w.attachEvent) { w.attachEvent("onload", go); }	}(window, document));	</script>	<!-- End of TrenDemon Code -->	<!-- Outbrain_trendemonタグ end -->	<!-- Google Tag Manager -->	<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-NGZDP5B"	height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>	<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':	new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],	j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=	'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);	})(window,document,'script','dataLayer','GTM-NGZDP5B');</script>	<!-- End Google Tag Manager -->	<!--DTM fire-->	<script type="text/javascript">_satellite.pageBottom();</script>	<!--/DTM fire--><script>$(function() {if ((navigator.userAgent.indexOf('Android') > 0 && navigator.userAgent.indexOf('Mobile') > 0) || navigator.userAgent.indexOf('iPod') > 0 || (navigator.userAgent.indexOf('iPhone') > 0 && navigator.userAgent.indexOf('iPad') == -1)) {} else{$('.sp2').insertAfter('.other8');}  var enter_num = 949;  var n = Math.ceil(enter_num/9)-1;  var n1 = Math.ceil(enter_num/9);  n = $("#pageTotal").html();  $('#pager'+n1).parent('li').css('display','none');  $('#pager'+n+'.current_page').parent('li').parent('ul').addClass('none_next');  $('.none_next .link_next').parent('li').css('display','none');$('.pageNum').html('/'+n);});</script></body></html>