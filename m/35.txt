<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><!--[if IEMobile 7]><html xmlns="http://www.w3.org/1999/xhtml" class="no-js ie iem7" lang="[语言]" dir="ltr"><![endif]--><!--[if lte IE 6]><html xmlns="http://www.w3.org/1999/xhtml" class="no-js ie lt-ie9 lt-ie8 lt-ie7" lang="ja" dir="ltr"><![endif]--><!--[if (IE 7)&(!IEMobile)]><html xmlns="http://www.w3.org/1999/xhtml" class="no-js ie lt-ie9 lt-ie8" lang="ja" dir="ltr"><![endif]--><!--[if IE 8]><html xmlns="http://www.w3.org/1999/xhtml" class="no-js ie lt-ie9" lang="ja" dir="ltr"><![endif]--><!--[if (gte IE 9)|(gt IEMobile 7)]><html xmlns="http://www.w3.org/1999/xhtml" class="no-js ie" lang="ja" dir="ltr" prefix="content: http://purl.org/rss/1.0/modules/content/ dc: http://purl.org/dc/terms/ foaf: http://xmlns.com/foaf/0.1/ og: http://ogp.me/ns# rdfs: http://www.w3.org/2000/01/rdf-schema# sioc: http://rdfs.org/sioc/ns# sioct: http://rdfs.org/sioc/types# skos: http://www.w3.org/2004/02/skos/core# xsd: http://www.w3.org/2001/XMLSchema#"><![endif]--><!--[if !IE]><!--><html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="ja" dir="ltr" prefix="content: http://purl.org/rss/1.0/modules/content/ dc: http://purl.org/dc/terms/ foaf: http://xmlns.com/foaf/0.1/ og: http://ogp.me/ns# rdfs: http://www.w3.org/2000/01/rdf-schema# sioc: http://rdfs.org/sioc/ns# sioct: http://rdfs.org/sioc/types# skos: http://www.w3.org/2004/02/skos/core# xsd: http://www.w3.org/2001/XMLSchema#"><!--<![endif]--><head><meta http-equiv="Content-Type" charset="UTF-8" /><meta name="MobileOptimized" content="width" /><meta http-equiv="cleartype" content="on" /><link rel="apple-touch-icon-precomposed" href="http://news.mynavi.jp/sites/all/themes/mynavi_news/apple-touch-icon-precomposed.png" /><link rel="profile" href="http://www.w3.org/1999/xhtml/vocab" /><link rel="shortcut icon" href="http://news.mynavi.jp/sites/all/themes/mynavi_news/favicon.ca.ico" type="image/vnd.microsoft.icon" /><meta name="description" content="[metatags_description]" /><meta name="viewport" content="width=device-width" /><link rel="canonical" href="http://news.mynavi.jp/dp/c/technology" /><link rel="shortlink" href="http://news.mynavi.jp/dp/c/technology" /><title>[metatags_title]</title><!-- #BeginEditable "head" --><meta name="author" content="Mynavi Corporation" lang="ja"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><script type="text/javascript">  <!-- #BeginEditable "news_vars" -->  var news_vars={ "genre":"business","ch":"technology","cat":"","subcat":"","ptype":"top-ch" };  news_vars.adtag = "MN.TECHNOLOGY.TOP";</script><script src="http://news.mynavi.jp/sites/default/files/nfs/files/js/js_BLHlt3BNvc_NCKr5F2S1jw4H-bXsfye38lOwM_DutGc.js"></script><!--[if (gte IE 6)&(lte IE 8)]><script src="http://news.mynavi.jp/sites/default/files/nfs/files/js/js_9pCvt8MQh4y6fjaE8IYZ56OdQcUO_YUVvEss0mZA7Qc.js"></script><![endif]--><script src="http://news.mynavi.jp/sites/default/files/nfs/files/js/js_MetD57zevJDtV7BFD-ylt2V_gizBCKvsbsrqW1g3J-A.js"></script><script>jQuery(document).ready(function($){$.getScript("http://n.mynv.jp/js/leftcolumn.js")});</script><script>$ = jQuery;</script><script>jQuery(document).ready(function($){$.getScript("http://n.mynv.jp/js/asp-common.js")});</script><script>jQuery(document).ready(function($){$.getScript("http://s.news.mynavi.jp/js/flatmenu.js")});</script><script src="http://news.mynavi.jp/sites/default/files/nfs/files/js/js_IaTxXFs9dLkVCxy6JVgvqxpIDKNh0veFqaO_-FtpnaM.js"></script><script src="http://news.mynavi.jp/sites/default/files/nfs/files/js/js_p6xuRrEHoil23HF3gP6A4jo5lgL5SeOzj0eR6fHvAl0.js"></script><script>jQuery.extend(Drupal.settings, {"basePath":"\/","pathPrefix":""});</script><script type="text/javascript" language="JavaScript">  f_ver={ "footer":"11","tokkiA":"i2","bear":"3","tokkiB":"i2","search":"28","blog":"2" };</script><script type="text/javascript" src="http://n.mynv.jp/js/header.ca.js?v=17" charset="utf-8"></script><script type="text/javascript" src="http://n.mynv.jp/js/additional.js"></script><link rel="alternate" href="http://s.news.mynavi.jp/index.html" type="text/html" media="only screen and (max-width:640px)"><link rel="shortcut icon" href="http://n.mynv.jp/favicon.ca.ico"/><!-- #EndEditable --><link rel="stylesheet" type="text/css" href="http://n.mynv.jp/css/common.css" media="screen,print" /><link rel="stylesheet" type="text/css" href="http://n.mynv.jp/css/channel.css" media="screen,print" /><link rel="stylesheet" type="text/css" href="http://n.mynv.jp/css/ea.nav.css?v=18" media="screen,print" /><link rel="stylesheet" type="text/css" href="http://n.mynv.jp/css/ea.ca.css?v=55" media="screen,print" /><script>  (function() {    var useSSL = 'https:' == document.location.protocol;    var src = (useSSL ? 'https:' : 'http:') +      '//www.googletagservices.com/tag/js/gpt.js';    document.write('<scr' + 'ipt src="' + src + '"></scr' + 'ipt>');  })();</script><script>  googletag.cmd.push(function() {    if(!is_sp_responsive()){      var mn_var = 'mn';      googletag.defineSlot('/6082618/mn.footer', [684, 90], 'div-gpt-ad-1479185899023-4').addService(googletag.pubads());      googletag.defineSlot('/6082618/mn.gateside', [170, 1024], 'div-gpt-ad-1479185899023-6').addService(googletag.pubads());      googletag.defineSlot('/6082618/mn.headline1', [1, 1], 'div-gpt-ad-1479185899023-7').addService(googletag.pubads());      googletag.defineSlot('/6082618/mn.headline2', [1, 1], 'div-gpt-ad-1479185899023-8').addService(googletag.pubads());      googletag.defineSlot('/6082618/mn.headline3', [1, 1], 'div-gpt-ad-1479185899023-9').addService(googletag.pubads());      googletag.defineSlot('/6082618/mn.headline4', [1, 1], 'div-gpt-ad-1479185899023-10').addService(googletag.pubads());      googletag.defineSlot('/6082618/mn.reca', [300, 250], 'div-gpt-ad-1479185899023-14').addService(googletag.pubads());      googletag.defineSlot('/6082618/mn.recb', [300, 250], 'div-gpt-ad-1479185899023-16').addService(googletag.pubads());      googletag.defineSlot('/6082618/mn.recc', [[300, 250], [300, 600]], 'div-gpt-ad-1485738116644-0').addService(googletag.pubads());      googletag.defineSlot('/6082618/mn.welcome', [640, 480], 'div-gpt-ad-1479185899023-20').addService(googletag.pubads());    } else {      var mn_var = 'mnsp';      googletag.defineSlot('/6082618/mnsp.header', [320, 100], 'div-gpt-ad-1479188208151-5').addService(googletag.pubads());      googletag.defineSlot('/6082618/mnsp.reca', [300, 250], 'div-gpt-ad-1479188208151-7').addService(googletag.pubads());      googletag.defineSlot('/6082618/mnsp.recb', [300, 250], 'div-gpt-ad-1479188208151-8').addService(googletag.pubads());    }    googletag.defineSlot('/6082618/mn.billboard', [970, 250], 'div-gpt-ad-1466143984602-0').addService(googletag.pubads());    googletag.pubads().enableSingleRequest();    googletag.pubads().collapseEmptyDivs();    googletag.pubads().setTargeting('mnpagetype', ['top-ch']);    googletag.pubads().setTargeting('gnr', [ mn_var +'.business']);    googletag.pubads().setTargeting('ch', [ mn_var +'.technology']);    if (location.href.match(/test|dp-stg/)) {      googletag.pubads().setTargeting('sitetype', ['test']);    }    googletag.pubads().setTargeting('ads', ['ok']);    googletag.pubads().enableSyncRendering();    googletag.enableServices();  });</script><link type="text/css" rel="stylesheet" href="http://news.mynavi.jp/sites/default/files/nfs/files/css/css_lb00tOuAVD5ZQxmcbNXqj5J62kchvGzDtIkiI4KTMxI.css" media="all" /><link type="text/css" rel="stylesheet" href="http://news.mynavi.jp/sites/default/files/nfs/files/css/css_4DgTU6_lkTPYBvIJjW5peGtBOhXkjuZ-tHGIbiqm5PY.css" media="all" /><link type="text/css" rel="stylesheet" href="http://news.mynavi.jp/css/gnav/gnav.css" media="all" /><link type="text/css" rel="stylesheet" href="http://news.mynavi.jp/sites/default/files/nfs/files/css/css_zED21mvWxuFxbVNWQ3jpwws9S15Sc5FyIQJiZnAMqL8.css" media="all" /><link type="text/css" rel="stylesheet" href="http://s.news.mynavi.jp/css/flatmenu.css" media="all" /><link type="text/css" rel="stylesheet" href="http://news.mynavi.jp/sites/default/files/nfs/files/css/css_5HAR01kIVivgqKMNExiXUZa8Grn3Xp6aR580kDV6uQI.css" media="all" /></head><body class="html not-front not-logged-in page-dp page-dp-c page-dp-c-technology business section-dp"><script>  news_vars.noportlet = [];  if( news_vars.custom ){ if( news_vars.custom.noportlet ){ news_vars.noportlet = news_vars.custom.noportlet; }}</script><script>  var opt_ch = news_vars.ch;  var opt_cat = news_vars.cat;  var opt_subcat = news_vars.subcat;  if(news_vars.group){var opt_group = news_vars.group;}else{var opt_group = "";}  if(news_vars.ptype){var opt_ptype = news_vars.ptype;}else{var opt_ptype = "";}  if(news_vars.msite){var opt_msite = news_vars.msite;}else{var opt_msite = "";}  window['optimizely'] = window['optimizely'] || [];  window['optimizely'].push(["customTag", {    "ch": opt_ch,    "cat": opt_cat,    "subcat": opt_subcat,    "group": opt_group,    "ptype": opt_ptype,    "msite": opt_msite  }]);</script><script type="text/javascript" src="http://n.mynv.jp/js/search.ca.js"></script><div id="_popIn_category" style="display:none">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div><!-- #EndEditable -->  [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    <div class="l-page">    <header class="l-header" role="banner">          <div class="l-region l-region--navigation">    <div id="block-block-7" class="block block--block block--block-7">        <div class="block__content">    <style>#mwlc-container #contents {  background: white !important;}</style><!-- /6082618/mn.welcome --><div id='div-gpt-ad-1479185899023-20'><script>if(!is_sp_responsive()){if(document.referrer != location.href){    googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479185899023-20'); });}}</script></div>  </div></div><div id="site-title" class="block block--block block--block-1">        <div class="block__content">    <link rel="stylesheet" type="text/css" href="https://n.mynv.jp/css/gnav/gnav.css" /><div id="gl-header" class="gl-header-business"><!-- tab --><div class="gl-header-wrap"><div class="gl-header-gnav"><p class="gm-header-category-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p><ul class="gm-header-gnav"><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="current">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></div><!--/gl-header-gnav--></div><!--/gl-header-wrap--><!-- menu --><div class="gl-header-categories-wrap"><div class="gm-header-categories"><div class="gm-header-categories-wrap"><ul class="gl-header-cat-parent gm-header-cat-parent"><li class="biz">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="enterprise">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="technology">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="whitepaper">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><div class="gl-header-cat-child gm-header-cat-child-01"><div class="gm-header-cat-child biz"><ul class="gm-header-ad"></ul></div><div class="gm-header-cat-child enterprise"><ul><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><ul class="gm-header-sponsors"><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><ul class="gm-header-ad"></ul></div><div class="gm-header-cat-child technology"><ul><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><ul class="gm-header-ad"></ul></div><div class="gm-header-cat-child whitepaper"><ul class="gm-header-ad"></ul></div></div><!--/gm-header-cat-child-01--></div><!--/gm-header-categories-wrap --></div><!--/gm-header-categories--></div><!--/gl-header-categories-wrap --></div><!--/gl-header-->  </div></div>  </div>          </header>  <div class="l-main" id="str-container">    <div class="l-content" role="main" id="contents">                  <a id="main-content"></a>                              <div class="panel-display panel-3col-stacked clearfix" >      <div class="panel-panel panel-col-top">      <div class="inside"><div class="panel-pane pane-panels-mini pane-header-channel-top">            <div class="panel-display panel-1col clearfix" id="mini-panel-header_channel_top">  <div class="panel-panel panel-col">    <div><div class="panel-pane pane-custom pane-13">            <!-- TECHNOLOGY --><style>#str-container {background-color: #fff !important; }</style>    </div><div class="panel-pane pane-custom pane-14 pane-site-banner">                  <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>    </div><div class="panel-pane pane-channel-header">            <div class="mynavi-news-features-channel-header mynavi-news-features-channel-header-technology"><h1>[H1]</h1></div>    </div><div class="panel-pane pane-custom pane-15">            <table class="lyt-keyword"><tbody><tr><td><span>急上昇ワード：</span></td><td id="_popIn_keyowrd"></div></div></td></tr></tbody></table><style>.lyt-keyword a {  display: inline-block !important;  margin-left: 10px !important;  color: #2c4484 !important;  font-size: 13px !important;}.lyt-keyword a:hover,.lyt-keyword a:visited {  color: #0096db !important;  text-decoration: none;}.lyt-keyword span {   color: #999;}#mini-panel-header_genre_top .lyt-keyword { width: 320px; }</style><script>(function() {var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.charset = "utf-8"; pa.async = true;pa.src = window.location.protocol + "//api.popin.cc/searchbox/mynavi_news_new.js";var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);})(); </script>    </div><div class="panel-pane pane-custom pane-16">                  <dl class="gm-header-information">        <dt><span>お知らせ</span></dt>        <dd>        </dd>      </dl>    </div><div class="panel-pane pane-custom pane-17">            <div id="form_search_header" class="bold_design"><form action="/search-result.html"><input type="text" id="keyword" autocomplete="off" spellcheck="false" style="background-image: none;"> <input type="image" src="http://n.mynv.jp/images/header-btn-search.png" alt="検索" class="submit" id="_popin_default"></form><div class="regist"><a target="_blank" rel="nofollow" href="https://news.mynavi.jp/mypage/"><span>会員ページ</span></a></div></div><!-- /form-search -->    </div><div class="panel-pane pane-custom pane-18 sp_global_navi">            <header class=" headroom">    <div id="site-title" style="padding: 0;">       [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<div id="popin_icon"><div></div></div>       <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1><a class="mynavi-mypage" href="http://v6.advg.jp/adpv6/r/7yj_Dgp" gaec="header" gaea="mypage_icon" target="_blank"><img src="http://nsp.mynv.jp/img/img_mypage.png" title="マイページ" width="48"></a></div></header>    </div><div class="panel-pane pane-panels-mini pane-header-channel-sp">            <div class="panel-display panel-1col clearfix" id="mini-panel-header_channel_sp">  <div class="panel-panel panel-col">    <div><div class="panel-pane pane-custom pane-19">            <img src="http://news.mynavi.jp/sites/default/files/nfs/files/ch_iconww_09.png" />    </div><div class="panel-pane pane-channel-latest-pubtime">            <p class="mynavi-news-features-latest-pubtime">  08月08日 16:02更新</p>    </div></div>  </div></div>    </div><div class="panel-pane pane-custom pane-20">            <!-- /6082618/mn.billboard --><div id='div-gpt-ad-1466143984602-0'><script type='text/javascript'>if (!is_sp_responsive() && !$("body").hasClass("welcome") && $('#mn-welcome').length <= 0) {googletag.cmd.push(function() { googletag.display('div-gpt-ad-1466143984602-0'); });}</script></div>    </div></div>  </div></div>    </div></div>    </div>    <div class="center-wrapper">    <div class="panel-panel panel-col-first">      <div class="inside"><div class="panel-pane pane-category-navi">            <!-- header-catenav --><div id="header-catenav" data-click="dc-catNav"><div id="str-nav-cate-2"><p class="navHeader">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p><ul><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li><li onClick="news_func.gaClick(this);">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="child"></ul></li></ul></div><!-- /str-nav-cate-2 --></div><!-- /header-catenav -->    </div></div>    </div>    <div class="panel-panel panel-col">      <div class="inside"><div class="panel-pane pane-page-breadcrumb">            <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2><ul class="breadcrumb"><li>[hrefx]</li><li><span >テクノロジー</span></li></ul>    </div><div class="panel-pane pane-custom pane-1 linklist">            <div class="linklist_block"><ul><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></div><style>.pane-page-breadcrumb {   float: left;}.linklist {  float: right;  margin: 0 !important;}.linklist_block {   clear: both;   float: right;}.pane-custom.linklist li a {  color: #6a6a6a;  padding: 3px 4px 1px;  display: block;}.pane-custom.linklist li {  border: 1px #ccc solid;  border-radius: 3px;  background: #dddddd;  float: left;  margin: 0 0 0 5px;}.pane-topic-articles {clear: both;}@media screen and (max-width: 766px) {.linklist_block { display:none;}body.page-dp-c.page-dp.business .l-page #str-container #contents .center-wrapper > .panel-col .mynavi-news-features-topic-articles-channel-enterprise .mynavi-news-features-topic-articles-wrap .mynavi-news-features-channel-category-headline-more-link a,body.page-dp-c.page-dp.business .l-page #str-container #contents .center-wrapper > .panel-col .mynavi-news-features-topic-articles-channel-technology .mynavi-news-features-topic-articles-wrap .mynavi-news-features-channel-category-headline-more-link a { display: none; }body.page-dp-c.page-dp.business .l-page #str-container #contents .center-wrapper > .panel-col .pane-panels-mini.pane-featured-aritcle-series-column .series-column-item:last-child .series-column-item-more-link a,body.page-dp-c.page-dp.business .l-page #str-container #contents .center-wrapper > .panel-col .pane-panels-mini.pane-featured-aritcle-series-column .series-column-item:nth-last-child(2) .series-column-item-more-link a { display: none; }}</style>    </div><div class="panel-pane pane-custom pane-2">            <div id="header-ad">  <!-- /6082618/mnsp.header -->  <div id='div-gpt-ad-1479188208151-5'>  <script>    if(is_sp_responsive()){        googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479188208151-5'); });    }  </script>  </div></div><style>body.page-dp-c.page-dp.digital .l-page #str-container #contents .center-wrapper > .panel-col .pane-featured-articles.topix .mynavi-news-features-featured-articles-list-digital_1 .mynavi-news-features-featured-articles-item.first-value .mynavi-news-features-featured-articles-item-title,body.page-dp-c.page-dp.digital .l-page #str-container #contents .center-wrapper > .panel-col .pane-featured-articles.topix .mynavi-news-features-featured-articles-list-digital_1 .mynavi-news-features-featured-articles-item.first-value .mynavi-news-features-featured-articles-item-title a {  font-size: 16px !important;}</style>    </div><div id="jp-tech" class="panel-pane pane-topic-articles">          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <div class="mynavi-news-features-topic-articles mynavi-news-features-topic-articles-channel-technology clearfix" id="mynavi-news-features-topic-articles-channel-technology">    <div class="mynavi-news-features-topic-articles-wrap">        <div class="mynavi-news-features-topic-articles-lead-image">            <a href="http://news.mynavi.jp/series/cv_future/040/index.html" id="mynavi-news-features-topic-articles-lead-image-lead_image_url">                <img src="http://news.mynavi.jp/series/cv_future/040/index.iapp.jpg">            </a>        </div>        <ul class="mynavi-news-features-topic-articles-list mynavi-news-features-topic-articles-list-channel-technology">            <li class="mynavi-news-features-topic-articles-item clearfix">  <a href="http://news.mynavi.jp/series/cv_future/040/index.html">    <img src="http://news.mynavi.jp/series/cv_future/040/index.iapp.jpg">  </a>      <div class="mynavi-news-features-topic-articles-item-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mynavi-news-features-topic-articles-item-caption">          <div class="mynavi-news-features-topic-articles-item-category">        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </div>              <div class="mynavi-news-features-topic-articles-item-update-time">        [11:00 8/8]      </div>      </div></li><li class="mynavi-news-features-topic-articles-item clearfix">  <a href="http://news.mynavi.jp/news/2017/08/07/177/index.html">    <img src="http://news.mynavi.jp/news/2017/08/07/177/index.iapp.jpg">  </a>      <div class="mynavi-news-features-topic-articles-item-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mynavi-news-features-topic-articles-item-caption">          <div class="mynavi-news-features-topic-articles-item-category">        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </div>              <div class="mynavi-news-features-topic-articles-item-update-time">        [16:28 8/7]      </div>      </div></li><li class="mynavi-news-features-topic-articles-item clearfix">  <a href="http://news.mynavi.jp/news/2017/08/07/175/index.html">    <img src="http://news.mynavi.jp/news/2017/08/07/175/index.iapp.jpg">  </a>      <div class="mynavi-news-features-topic-articles-item-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mynavi-news-features-topic-articles-item-caption">          <div class="mynavi-news-features-topic-articles-item-category">        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </div>              <div class="mynavi-news-features-topic-articles-item-update-time">        [16:16 8/7]      </div>      </div></li><li class="mynavi-news-features-topic-articles-item clearfix">  <a href="http://news.mynavi.jp/articles/2017/08/04/momo5/index.html">    <img src="http://news.mynavi.jp/articles/2017/08/04/momo5/index.iapp.jpg">  </a>      <div class="mynavi-news-features-topic-articles-item-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mynavi-news-features-topic-articles-item-caption">          <div class="mynavi-news-features-topic-articles-item-category">        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </div>              <div class="mynavi-news-features-topic-articles-item-update-time">        [15:47 8/4]      </div>      </div></li><li class="mynavi-news-features-topic-articles-item clearfix">  <a href="http://news.mynavi.jp/series/us_rocket/003/index.html">    <img src="http://news.mynavi.jp/series/us_rocket/003/index.iapp.jpg">  </a>      <div class="mynavi-news-features-topic-articles-item-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mynavi-news-features-topic-articles-item-caption">          <div class="mynavi-news-features-topic-articles-item-category">        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </div>              <div class="mynavi-news-features-topic-articles-item-update-time">        [10:00 8/4]      </div>      </div></li><li class="mynavi-news-features-topic-articles-item clearfix">  <a href="http://news.mynavi.jp/news/2017/08/03/192/index.html">    <img src="http://news.mynavi.jp/news/2017/08/03/192/index.iapp.jpg">  </a>      <div class="mynavi-news-features-topic-articles-item-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mynavi-news-features-topic-articles-item-caption">          <div class="mynavi-news-features-topic-articles-item-category">        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </div>              <div class="mynavi-news-features-topic-articles-item-update-time">        [16:42 8/3]      </div>      </div></li>        </ul>                    <p class="mynavi-news-features-channel-category-headline-more-link">                <a onclick="document.cookie='pcsite=1;domain=news.mynavi.jp;path=/'" href="/technology/newsworthy/"><span>もっと見る</span></a>            </p>            </div></div>    </div><div class="panel-pane pane-hotword">                </div><div class="panel-pane pane-panels-mini pane-featured-aritcle-series-column">            <div class="panel-display panel-1col clearfix" id="mini-panel-featured_aritcle_series_column">  <div class="panel-panel panel-col">    <div><div id="series-3panel" class="panel-pane pane-series-column-articles series-column-item">          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <ul class="interview-list mynavi-news-features-interview-articles mynavi-news-features-interview-articles-channel-technology-series">  <li class="mynavi-news-features-interview-articles-item">    <div class="interview-item-image article-image interview-item-image series-column-item-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div>    <div class="series-column-item-title interview-item-title article-title interview-item-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div></li><li class="mynavi-news-features-interview-articles-item">    <div class="series-column-item-title interview-item-title article-title interview-item-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div></li><li class="mynavi-news-features-interview-articles-item">    <div class="series-column-item-title interview-item-title article-title interview-item-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div></li></ul><p class="series-column-item-more-link interview-item-more-link">[hrefx]</p>    </div><div id="column-3panel" class="panel-pane pane-series-column-articles series-column-item">          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <ul class="interview-list mynavi-news-features-interview-articles mynavi-news-features-interview-articles-channel-technology-column">  <li class="mynavi-news-features-interview-articles-item">    <div class="interview-item-image article-image interview-item-image series-column-item-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div>    <div class="series-column-item-title interview-item-title article-title interview-item-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div></li><li class="mynavi-news-features-interview-articles-item">    <div class="series-column-item-title interview-item-title article-title interview-item-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div></li><li class="mynavi-news-features-interview-articles-item">    <div class="series-column-item-title interview-item-title article-title interview-item-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div></li></ul><p class="series-column-item-more-link interview-item-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p>    </div></div>  </div></div>    </div><div class="panel-pane pane-custom pane-3">            <!-- textAd --><div class="lyt-box-01" id="textAd-async"><ul class="lyt-list-pr"><!-- /6082618/mn.headline1 (txt pr1) --><div id='div-gpt-ad-1479185899023-7'><script>if(!is_sp_responsive()){googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479185899023-7'); });}</script></div><!-- /6082618/mn.headline2 --><div id='div-gpt-ad-1479185899023-8'><script>if(!is_sp_responsive()){googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479185899023-8'); });}</script></div><!-- /6082618/mn.headline3 --><div id='div-gpt-ad-1479185899023-9'><script>if(!is_sp_responsive()){googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479185899023-9'); });}</script></div><!-- /6082618/mn.headline4 --><div id='div-gpt-ad-1479185899023-10'><script>if(!is_sp_responsive()){googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479185899023-10'); });} else { document.getElementById("textAd-async").style.display="none";}</script></div></ul><div class="icon-pr">[PR]</div></div>    </div><div class="panel-pane pane-custom pane-4">            <link rel="stylesheet" type="text/css" href="http://n.mynv.jp/css/ea.ca.css?v=7" media="screen,print" /><style>@media screen and (min-width: 767px) {body.page-dp-c.page-dp.digital .l-page #str-container #contents .center-wrapper > .panel-col .pane-featured-articles.topix .mynavi-news-features-featured-articles-list-digital_1 .mynavi-news-features-featured-articles-item.first-value .mynavi-news-features-featured-articles-item-title,body.page-dp-c.page-dp.digital .l-page #str-container #contents .center-wrapper > .panel-col .pane-featured-articles.topix .mynavi-news-features-featured-articles-list-digital_1 .mynavi-news-features-featured-articles-item.first-value .mynavi-news-features-featured-articles-item-title a {  font-size: 16px !important;}}</style><script>news_vars.time = new Date();if(typeof is_kikaku != 'function') {   function is_kikaku() {  return  false; }}$('#itsearch-3panel .series-column-item-more-link a').attr('href', 'https://news.mynavi.jp/itsearch/');$('#column-3panel .series-column-item-more-link a').attr('href', '/technology/column/');$('#series-3panel .series-column-item-more-link a').attr('href', '/technology/series/');$(window).load(function() {    $('.pane-category-headline-panel-ep .pane-title').html('[hrefx]');});</script><script type"text/javascript" src="//n.mynv.jp/js/footer.ca.js"></script>    </div><div class="panel-pane pane-channel-recent-articles channeltop-recent-articles">          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <div class="channeltop-recent-articles-inner business_1 clearfix">  <ul class="clearfix">    <li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/08/164/index.html">      <img src="http://news.mynavi.jp/news/2017/08/08/164/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]          </div>    <div class="article-lead">パナソニック、東京国際空港ターミナル(以下 TIAT)、日本空港ビルデング(以下 JAT)、日本電信電話(NTT)は、情報ユニバーサルデザインの取り組みの公開実証実験を開始することを発表した。</div>    <div class="article-update-time">[2017/08/08 - 16:02]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/08/123/index.html">      <img src="http://news.mynavi.jp/news/2017/08/08/123/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]          </div>    <div class="article-lead">ソニーモバイルコミュニケーションズは、東京電力エナジーパートナー(以下 東電EP)と共同で、スマートホーム分野でIoTを活用したサービスを構築し、「おうちの安心プラン」を商品化したことを発表した。</div>    <div class="article-update-time">[2017/08/08 - 14:18]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/08/121/index.html">      <img src="http://news.mynavi.jp/news/2017/08/08/121/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">フォントワークスは、年間定額制フォントサービス「LETS」で20書体、「モトヤLETS」で3書体の新書体を8月22日より提供開始すると発表した。</div>    <div class="article-update-time">[2017/08/08 - 14:11]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/articles/2017/08/08/mft_2017/index.html">      <img src="http://news.mynavi.jp/articles/2017/08/08/mft_2017/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">[metatags_descriptionx]</li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/08/073/index.html">      <img src="http://news.mynavi.jp/news/2017/08/08/073/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">新エネルギー・産業技術総合開発機構(NEDO)は、NEDO事業の成果をもとに、三浦工業が発電効率48%、総合効率90%を達成した「業務用4.2kW固体酸化物形燃料電池(SOFC)システム」を開発し、2017年10月から販売を開始することを発表した。</div>    <div class="article-update-time">[2017/08/08 - 12:26]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/column/ccmanga/123/index.html">      <img src="http://news.mynavi.jp/column/ccmanga/123/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">漫画家・コラムニストとして活躍する兼業作家・カレー沢薫氏が、日常と創作にまつわるエピソードをつづる全クリエイター必読のコラム。第60回から、カレー沢氏がIT用語をテーマに語る特集コラムを開始しています。</div>    <div class="article-update-time">[2017/08/08 - 12:00]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/08/067/index.html">      <img src="http://news.mynavi.jp/news/2017/08/08/067/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">東京大学医学部附属病院は、人間そっくりな眼科手術シミュレータを開発し、網膜硝子体手術用眼球モデルの開発と計測システムの統合に成功したと発表した。</div>    <div class="article-update-time">[2017/08/08 - 11:37]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/08/060/index.html">      <img src="http://news.mynavi.jp/news/2017/08/08/060/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">ラピスセミコンダクタは、IoT無線通信の新分野として期待される低電力広域通信 (LPWA:Low Power Wide Area)対応のデュアルモード無線通信LSI「ML7404」を開発したと発表した。2017年7月よりサンプル出荷を開始しており、同年12月より10万個/月の量産出荷を予定している。サンプルの参考価格は1000円(税別)。</div>    <div class="article-update-time">[2017/08/08 - 11:29]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/08/058/index.html">      <img src="http://news.mynavi.jp/news/2017/08/08/058/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">ZMPは7日、独Telemotive製タッチパネル搭載小型車載データロガー「blue PireT Remote」の販売を開始したことを発表した。</div>    <div class="article-update-time">[2017/08/08 - 11:00]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/series/cv_future/040/index.html">      <img src="http://news.mynavi.jp/series/cv_future/040/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">今回もハード寄りの話をしたいと思います。前回、前々回は撮像素子とレンズについてでした。今回は、GPGPUについてです。</div>    <div class="article-update-time">[2017/08/08 - 11:00]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/08/043/index.html">      <img src="http://news.mynavi.jp/news/2017/08/08/043/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">NECは、2020年の国内電力市場における発送電分離を見据え、米国・サクラメント電力公社(以下 SMUD)、SpaceTime Insight(以下 SpaceTime)とともに、電力事業者向けスマートエネルギーソリューションの提供を開始したことを発表した。</div>    <div class="article-update-time">[2017/08/08 - 09:44]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/07/256/index.html">      <img src="http://news.mynavi.jp/news/2017/08/07/256/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">三重富士通セミコンダクター(MIFS)とMicrochip Technologyは8月7日、Microchipの子会社であるSilicon Storage Technology(SST)からライセンスされるSuperFlashメモリ技術を使って、40nmプロセスを採用した車載プラットフォームを開発する計画を発表した</div>    <div class="article-update-time">[2017/08/07 - 19:21]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/07/245/index.html">      <img src="http://news.mynavi.jp/news/2017/08/07/245/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">市場動向調査企業である英IHS Markitは8月3日(英国時間)、2017年第2四半期の世界スマートフォン(スマホ)市場は、前年同四半期比7%増となる3億5090万台へと成長を果たしたとの速報値を発表した。</div>    <div class="article-update-time">[2017/08/07 - 18:52]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/07/244/index.html">      <img src="http://news.mynavi.jp/news/2017/08/07/244/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">南米チリにあるアルマ望遠鏡を使って地球から94億光年の距離にある銀河団内にガスを豊富に含む銀河を17個発見した、と国立天文台などの研究グループが2日発表した。遠方の宇宙でガスに富む銀河がこれほど多く見つかったのは初めてで、銀河団に含まれる銀河の進化を明らかにしていく道筋を示す成果という。</div>    <div class="article-update-time">[2017/08/07 - 18:44]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/07/207/index.html">      <img src="http://news.mynavi.jp/news/2017/08/07/207/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">大阪大学大学院大阪大学、金沢大学、浜松医科大学、千葉大学、福井大学の5大学連合大学院である「連合小児発達学研究科」の谷池雅子教授らによる研究グループは、幼児の眠りの問題に特化し、専門家に相談したり指導を受けたりできるアプリ「ねんねナビ」を開発したことを発表した。</div>    <div class="article-update-time">[2017/08/07 - 17:48]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/07/192/index.html">      <img src="http://news.mynavi.jp/news/2017/08/07/192/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">市場動向調査企業である米Gartnerは8月2日、2017年の世界の半導体製造に向けた設備投資額は、前回予測の前年比1.4%増から大きく上方修正され、同10.2%増の777億ドルになるとの予測を発表した。</div>    <div class="article-update-time">[2017/08/07 - 16:40]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/07/177/index.html">      <img src="http://news.mynavi.jp/news/2017/08/07/177/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">慶應義塾大学(慶大)は7月28日、クマムシのゲノム情報を解読し、極限環境耐性の多様性を生み出す機構や、脱皮動物での進化について明らかにしたと発表した。</div>    <div class="article-update-time">[2017/08/07 - 16:28]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/07/176/index.html">      <img src="http://news.mynavi.jp/news/2017/08/07/176/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">名古屋大学(名大)は8月7日、大型放射光施設SPring-8におけるX線回析実験による分子性結晶の分子軌道分布を可視化して定量分析する方法を確立し、擬一次元性分子性結晶中の実空間における電子状態の直接観測に成功したと発表した。</div>    <div class="article-update-time">[2017/08/07 - 16:27]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/07/175/index.html">      <img src="http://news.mynavi.jp/news/2017/08/07/175/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">東京大学(東大)は8月5日、フォノニック結晶と呼ばれる人工結晶構造の秩序を制御することで、熱本来の「波動性」を利用して熱伝導を制御できることを実証したと発表した。</div>    <div class="article-update-time">[2017/08/07 - 16:16]</div>  </div></li><li class="channeltop-recent-articles-item default">  <div class="article-image">    <a href="http://news.mynavi.jp/news/2017/08/07/174/index.html">      <img src="http://news.mynavi.jp/news/2017/08/07/174/index.iapp.jpg">    </a>  </div>  <div class="article-text">    <div class="article-title">      [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           </div>    <div class="article-lead">物質・材料研究機構(NIMS)は8月3日、高誘電体として知られる層状ペロブスカイト構造を持つナノシートを作製し、膜厚10nm以下のナノスケール領域で世界最高性能となる誘電率470の誘電体膜の開発に成功したと発表した。</div>    <div class="article-update-time">[2017/08/07 - 16:12]</div>  </div></li>  </ul></div>    </div><div class="panel-pane pane-panels-mini pane-category-headline-panel-tech">          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <div class="panel-display panel-1col clearfix" id="mini-panel-category_headline_panel_tech">  <div class="panel-panel panel-col">    <div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx]</p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]     </p>  <ul class="clearfix">    <li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li><li class="mynavi-news-features-recent-articles-item">  <div class="article-image">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div>  <div class="article-title">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]   </div></li>  </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div><div class="panel-pane pane-category-headline">            <div class="mynavi-news-features-channel-category-headline mynavi-news-features-channel-category-headline-business_1"><p class="mynavi-news-features-channel-category-headline-name">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]           <span>[Sponsored]</span>    </p>  <ul class="clearfix">      </ul>  <p class="mynavi-news-features-channel-category-headline-more-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p></div>    </div></div>  </div></div>    </div><div class="panel-pane pane-custom pane-5">            <!-- TECHNOLOGY --><!-- /6082618/mn.footer --><div class="special_series_life-wrap clearfix"><div id='div-gpt-ad-1479185899023-4'><script>if(!is_sp_responsive()){googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479185899023-4'); });}</script></div></div>    </div></div>    </div>    <div class="panel-panel panel-col-last">      <div class="inside"><div class="panel-pane pane-custom pane-6">            <!-- /6082618/mn.reca --><div id='div-gpt-ad-1479185899023-14'><script>if(!is_sp_responsive()){googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479185899023-14'); });}</script></div><style>#div-gpt-ad-1479185899023-14, #div-gpt-ad-1479188208151-7_ad_container {  margin: 0 auto 8px;  text-align: center;}body.narrowWin div#str-container div#contents div#str-contentsright {width: 100%;}@media screen and (min-width: 767px) {body.page-dp-c.page-dp.page-dp-c-biz .l-page #str-container, body.page-dp-c.page-dp.page-dp-c.kurashi .l-page #str-container, body.node-type-special.section-dp .l-page #str-container, body.page-dp-c.page-dp.page-dp-c-special .l-page #str-container {  width: 994px;  max-width: none;}}@media screen and (max-width: 767px) {div#str-container div#contents div#str-contentsright {  width: 99% !important;  margin: 3px auto;}#logly-lift-widget {  width: 95% !important;  margin: 0 auto 10px;}}</style>    </div><div class="panel-pane pane-custom pane-7">            <div id="str-contentsright">  <div id="logly-lift-3826796"></div><script charset="UTF-8">  (function(){    var _lgy_lw = document.createElement("script");    _lgy_lw.type = "text/javascript";    _lgy_lw.charset = "UTF-8";    _lgy_lw.async = true;    _lgy_lw.src= (("https:" == document.location.protocol) ? "https://" : "http://")+"l.logly.co.jp/lift_widget.js?adspot_id=3826796";    var _lgy_lw_0 = document.getElementsByTagName("script")[0];    _lgy_lw_0.parentNode.insertBefore(_lgy_lw, _lgy_lw_0);  })();</script></div><style>#logly-lift-3826799 #logly-lift-widget-content-head,#logly-lift-4079146 #logly-lift-widget-content-head {  border-top: #ff1c9a solid 1px;  border-bottom: #ff1c9a solid 1px;  background: #ff1c9a;}#logly-lift-4079146 .logly-lift-ad-inner {  border-left: 3px solid #ff1c9a ;}#logly-lift-4079146 .logly-lift-ad-num-1 .logly-lift-ad-content .logly-lift-ad-title, #logly-lift-4079146 .logly-lift-ad-num-2 .logly-lift-ad-content .logly-lift-ad-title, #logly-lift-4079146 .logly-lift-ad-num-3 .logly-lift-ad-content .logly-lift-ad-title {border-bottom: 1px solid #ff1c9a;}div#str-container div#contents div#str-contentsright,.panel-pane.pane-popular-articles {    clear: both;}</style>    </div><div class="panel-pane pane-popular-articles">            <div class="mynavi-news-features-popular-articles">  <div class="mynavi-news-features-popular-articles-title">人気記事</div>  <ul class="mynavi-news-features-popular-articles-list mynavi-news-features-popular-articles-list-channel-technology">    <li class="mynavi-news-features-popular-articles-item rank-1">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li><li class="mynavi-news-features-popular-articles-item rank-2">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li><li class="mynavi-news-features-popular-articles-item rank-3">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li><li class="mynavi-news-features-popular-articles-item rank-4">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li><li class="mynavi-news-features-popular-articles-item rank-5">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li><li class="mynavi-news-features-popular-articles-item rank-6">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li><li class="mynavi-news-features-popular-articles-item rank-7">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li><li class="mynavi-news-features-popular-articles-item rank-8">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li><li class="mynavi-news-features-popular-articles-item rank-9">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li><li class="mynavi-news-features-popular-articles-item rank-10">  <div class="article-title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </div></li>  </ul>  <span class="mynavi-news-features-popular-articles-link">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </span></div>    </div><div class="panel-pane pane-custom pane-8">            <!-- /6082618/mn.recb --><div id='div-gpt-ad-1479185899023-16'><script>if(!is_sp_responsive()){googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479185899023-16'); });}</script></div><style>#div-gpt-ad-1479185899023-16, #div-gpt-ad-1479188208151-8_ad_container {  margin: 0 auto 8px;  text-align: center;  float: left;}</style>    </div><div class="panel-pane pane-custom pane-9">            <div id="str-contentsright">  <div id="logly-lift-4079142"></div><script charset="UTF-8">  (function(){    var _lgy_lw = document.createElement("script");    _lgy_lw.type = "text/javascript";    _lgy_lw.charset = "UTF-8";    _lgy_lw.async = true;    _lgy_lw.src= (("https:" == document.location.protocol) ? "https://" : "http://")+"l.logly.co.jp/lift_widget.js?adspot_id=4079142";    var _lgy_lw_0 = document.getElementsByTagName("script")[0];    _lgy_lw_0.parentNode.insertBefore(_lgy_lw, _lgy_lw_0);  })();</script></div>    </div><div class="panel-pane pane-custom pane-10">            <div id="sns_timeline"><div class="sns_title_main"><p>マイナビニュース SNS</p></div><div class="sns_button_tw"><span>Twitter</span>[hrefx]</div><div class="sns_line_tw"><a class="twitter-timeline" href="https://twitter.com/news_mynavi_jp" data-widget-id="706749891960111104">@news_mynavi_jpさんのツイート</a></div></div><script>/* twitter */window.twttr = (function(d, s, id) {  var js, fjs = d.getElementsByTagName(s)[0],    t = window.twttr || {};  if (d.getElementById(id)) return t;  js = d.createElement(s);  js.id = id;  js.src = "https://platform.twitter.com/widgets.js";  fjs.parentNode.insertBefore(js, fjs);  t._e = [];  t.ready = function(f) {    t._e.push(f);  };  return t;}(document, "script", "twitter-wjs"));</script>    </div><div class="panel-pane pane-custom pane-11">            <!-- /6082618/mn.recc --><div id='div-gpt-ad-1485738116644-0'><script>if(!is_sp_responsive()){googletag.cmd.push(function() { googletag.display('div-gpt-ad-1485738116644-0'); });}</script></div><style>#lecc-pane {   float: right;}</style>    </div><div class="panel-pane pane-custom pane-12">            <style> body {position: relative !important;} #gate {position: static !important; height: 0px !important;}.mynavi-news-features-genre-header a img {  margin-bottom: -8px;}</style><!-- /6082618/mn.gateside --><div id='div-gpt-ad-1479185899023-6'><script>if(!is_sp_responsive()){googletag.cmd.push(function() { googletag.display('div-gpt-ad-1479185899023-6'); });}</script></div>    </div></div>    </div>  </div>      <div class="panel-panel panel-col-bottom">      <div class="inside"><div class="panel-pane pane-entity-field pane-taxonomy-term-field-channel-about">            <div class="field field--name-field-channel-about field--type-text-long field--label-hidden"><div class="field__items"><div class="field__item even"><div class="lyt-hdg-02 lyt-btn-innerhdg"><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3><span class="btn">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</span></div><div class="lyt-box-02" id="summaryChCat">[metatags_descriptionx]</div></div></div></div>    </div></div>    </div>  </div>          </div>          </div>    <footer class="l-footer" role="contentinfo">      <div class="l-region l-region--footer">    <div id="block-block-2" class="block block--block block--block-2">        <div class="block__content">    <div id="footer-wrap"><ul id="foot-list">  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>  <li class="term_list_pc_li">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li></ul><hr class="dotted">	<p id="copyright">[hrefx] Copyright © Mynavi Corporation</p></div><!-- ADPLAN Onetag --><script>var msiteParam;var tagsParam;var isProduct = false;if(!is_sp_responsive()){  if(location.host=='news.mynavi.jp') isProduct = true;  if(news_vars.msite){msiteParam="&msite=true";}else{msiteParam="";}  if(news_vars.tags){tagsParam="&tags="+news_vars.tags;}else{tagsParam="";}  adp_onetag1 = "<scr" + "ipt language='javascript' src='//o.advg.jp/ojs?aid=10214&pid=4&gnr="+news_vars.genre+"&ch=" + news_vars.ch + "&cat=" + news_vars.cat + "&subcat=" + news_vars.subcat + tagsParam + msiteParam + "' charset='UTF-8'></scr" + "ipt>";  adp_onetag2 = "<scr" + "ipt language='javascript' src='//o.advg.jp/ojs?aid=10214&pid=10&gnr="+news_vars.genre+"&ch=" + news_vars.ch + "&cat=" + news_vars.cat + "&subcat=" + news_vars.subcat + tagsParam + msiteParam + "' charset='UTF-8'></scr" + "ipt>";  adp_onetag3 = "<scr" + "ipt language='javascript' src='//o.advg.jp/ojs?aid=10214&pid=5&gnr="+news_vars.genre+"&ch=" + news_vars.ch + "&cat=" + news_vars.cat + "&subcat=" + news_vars.subcat + tagsParam + msiteParam + "' charset='UTF-8'></scr" + "ipt>";  if (isProduct) {    document.write(adp_onetag1);    document.write(adp_onetag2);  } else {    document.write(adp_onetag3);  }} else {  adp_src1 = "<scr" + "ipt language='javascript' src='//o.advg.jp/ojs?aid=10214&pid=7&gnr="+news_vars.genre+"&ch=" + news_vars.ch + "&cat=" + news_vars.cat + "&subcat=" + news_vars.subcat + tagsParam + msiteParam + " charset='UTF-8'></scr" + "ipt>";  adp_src2 = "<scr" + "ipt language='javascript' src='//o.advg.jp/ojs?aid=10214&pid=8&gnr="+news_vars.genre+"&ch=" + news_vars.ch + "&cat=" + news_vars.cat + "&subcat=" + news_vars.subcat + tagsParam + msiteParam + " charset='UTF-8'></scr" + "ipt>";  document.write(adp_src1);  document.write(adp_src2);}</script><!-- ADPLAN Onetag -->  </div></div><div id="block-block-4" class="block block--block block--block-4">        <div class="block__content">    <div id="site-title" class="container"><a></a></div><div class="flat"><div id="flatmenu" class=""><nav><div id="flatmenu-container">    <section class="flatmenu-section"><div class="flatmenu-title">カテゴリーから探す</div></section>    <section class="flatmenu-section">        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <ul class="ch-list-menu business ">                                                                                                                                                                                                                                                                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    <li class='active'>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                            </ul>    </section>    <section class="flatmenu-section">        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <ul class="ch-list-menu kurashi hidden ">                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    </ul>    </section>    <section class="flatmenu-section">        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <ul class="ch-list-menu entertainment hidden ">                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                                                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                                                                                                                                                                            </ul>    </section>    <section class="flatmenu-section">        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <ul class="ch-list-menu digital hidden ">                                                                                                                                                                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                                                                                                                            </ul>    </section><section class="flatmenu-section">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</section> <section class="flatmenu-section"><div class="flatmenu-title">キーワードから探す</div></section><section class="flatmenu-section">    <form class="popin_iform" action="//s.news.mynavi.jp/search">        <input type="search" name="q" placeholder="キーワードを入力してください">        <div id="popin_search">注目キーワードはこちら</div>        <input type="submit" value="検索" class="top10Search">    </form></section><section class="flatmenu-section sub"><ul class="sns-nav">    <li class="item facebook">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li class="item twitter">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li class="item right-mypage">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></section><section id="ranking"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2><div class="itemr">    <a href="/news/2017/08/04/165/?lead" gaec="rank_link" gaea="top_0"><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3></a></div><div class="itemr">    <a href="/news/2017/08/07/043/?lead" gaec="rank_link" gaea="top_1"><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3></a></div><div class="itemr">    <a href="/news/2017/08/07/109/?lead" gaec="rank_link" gaea="top_2"><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3></a></div><div class="ranking-more">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div></section>  <nav class="button-c js-menu-button" gaec="bread_link" gaea="close"><a class="bread-arrow-ct"><img src="https://nsp.mynv.jp/img/close_pan.png" width="10" height="10"/> <span>閉じる</span></a></nav></div></nav></div></div><script type="text/javascript">var _pop = _pop || [];_pop.push(["_set_read_categoryName",""]);(function() {    var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.charset = "utf-8"; pa.async = true;    pa.src = window.location.protocol + "//api.popin.cc/searchbox/mynavi_news_new.js";    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s); })();</script>  </div></div>  </div>  </footer></div>  </body></html>