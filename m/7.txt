<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html><!-- InstanceBegin template="/Templates/page-youkoso.dwt" codeOutsideHTMLIsLocked="false" --><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="keywords" content="[metatags_keywords]"><!-- InstanceBeginEditable name="doctitle" --><title>[metatags_title]</title><!-- InstanceEndEditable --><link rel="stylesheet" type="text/css" media="all" href="../style_page.css" /><!-- InstanceBeginEditable name="head" --><script src="http://code.jquery.com/jquery-1.10.0.min.js" type="text/javascript" charset="UTF-8"></script><script src="http://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js" type="text/javascript" charset="UTF-8"></script><script src="./js/jquery.vgrid.min.js" type="text/javascript" type="text/javascript" charset="UTF-8"></script><style type="text/css">/*<![CDATA[*/#grid-content {	list-style-type: none;	margin:0;	padding:0;}#grid-content ul {	margin:0;	padding:0;}#grid-content li {	width: 110px;	height: 120px;	/*border: 1px solid #696969;*/	margin-bottom: 50px;	text-align:center;	line-height:1.2em;}	#grid-content li img{		width:110px;		height:110px;		overflow:hidden;		margin-bottom:5px;	}	#grid-content li a{		display:block;		font-weight:bold;	}	#main #grid-content li a[target="_blank"]{/*別窓表示アイコンなし*/		padding-right:0px;		background: none;	}/*]]>*/</style><script type="text/javascript">//<![CDATA[$(function(){	$("#grid-content").vgrid();});//]]></script><!-- InstanceEndEditable --><link href="../img/favicon.ico" rel="shortcut icon" /></head><body><div id="container">	<div id="header"><h1>[hrefx][hrefx][hrefx][hrefx][hrefx]        <!--サイト内検索-->        <div class="search">        <script>          (function() {            var cx = '008473129598899154948:bp6mrkrxyrw';            var gcse = document.createElement('script');            gcse.type = 'text/javascript';            gcse.async = true;            gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +                '//www.google.com/cse/cse.js?cx=' + cx;            var s = document.getElementsByTagName('script')[0];            s.parentNode.insertBefore(gcse, s);          })();        </script>        <gcse:search></gcse:search>        <!--search--></div>    </div><!--#header--><div id="l_container"><dl class="youkoso_accordion">    <dt>グラム陰性通性嫌気性菌</dt>		<dd>                <p class="youkoso_menu_category">腸内細菌科</p>                    <!--<p>大腸菌</p>-->                    <p>[hrefx][hrefx][hrefx]</p>                    <!--<p>サルモネラ</p>-->                    <!--<p>クレブシエラ</p>-->                    <p>[hrefx][hrefx][hrefx][hrefx]</p>                    <!--<p>プロテウス</p>-->                <p class="youkoso_menu_category">ビブリオ科</p>                    <!--<p>コレラ</p>-->                    <!--<p>腸炎ビブリオ</p>-->                    <p>[hrefx][hrefx][hrefx][hrefx]</p>                <p class="youkoso_menu_category">その他のグラム陰性通性嫌気性桿菌</p>                    <p>[hrefx]</p>                    <!--<p>パスツレラ・マルトフィラ</p>-->    	</dd>    <dt>グラム陰性好気性桿菌</dt>        <dd>                <!--<p>緑膿菌</p>-->                <p>[hrefx][hrefx][hrefx][hrefx]</p>                <p>[hrefx][hrefx][hrefx][hrefx]</p>                <p>[hrefx][hrefx][hrefx][hrefx]</p>                <p>[hrefx][hrefx][hrefx][hrefx]</p>                <p>[hrefx][hrefx][hrefx][hrefx]</p>		</dd>    <dt>グラム陰性好気性球菌および球桿菌</dt>        <dd>                <p>[hrefx][hrefx][hrefx][hrefx]</p>                <p>[hrefx][hrefx][hrefx][hrefx][hrefx]</p>		</dd>    <!--<dt>グラム陰性嫌気性無芽胞桿菌</dt>-->    	<!--<dd>				<p>バクテロイデス</p>        </dd>-->    <dt>らせん菌群</dt>        <dd>				<p>[hrefx][hrefx][hrefx][hrefx]</p>				<p>[hrefx][hrefx][hrefx][hrefx]</p>				<!--<p>ヘリコバクター・ヘパティカス</p>-->        </dd>    <!--<dt>スピロヘータ類</dt>    	<dd>        		<p>トレポネーマ</p>				<p>レプトスピラ</p>        </dd>-->    <dt>グラム陽性球菌</dt>    	<dd>                <p class="youkoso_menu_category">ブドウ球菌科</p>                	<p>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p>                	<!--<p>その他のブドウ球菌</p>-->				<p class="youkoso_menu_category">レンサ球菌科</p>                	<p>[hrefx]</p>    	</dd>    <dt>グラム陽性芽胞形成桿菌</dt>    	<dd>                <p>[hrefx][hrefx][hrefx][hrefx]</p>                <p>[hrefx][hrefx][hrefx][hrefx][hrefx]</p>                <!--<p>破傷風菌</p>-->                <!--<p>クロストリジウム・セプチカム</p>-->                <!--<p>クロストリジウム・ディフィシル</p>-->                <p>[hrefx][hrefx][hrefx]</p>        </dd>    <dt>グラム陽性無芽胞桿菌</dt>    	<dd>				<p>[hrefx][hrefx][hrefx]</p>    	</dd>    <dt>放線菌とその関連細菌</dt>    	<dd>                <p>[hrefx][hrefx][hrefx]</p>                <!--<p>結核菌</p>-->                <p>[hrefx][hrefx][hrefx]</p>                <!--<p>非定型抗酸菌</p>-->    	</dd>    <dt>マイコプラズマ</dt>    	<dd>                <!--<p>肺炎マイコプラズマ</p>-->                <p>[hrefx][hrefx][hrefx]</p>    	</dd>    <!--<dt>リケッチア</dt>        <dd>                <p>リケッチア</p>        </dd>-->    <dt>クラミジア</dt>    	<dd>                <!--<p>性器クラミジア</p>-->                <p>[hrefx][hrefx][hrefx]</p>                <!--<p>オウム病クラミジア</p>-->                <p>[hrefx][hrefx][hrefx]</p>        </dd>    <dt>口腔細菌</dt>    	<dd>                <!--<p>ポリフィロモナス</p>-->                <p>[hrefx][hrefx][hrefx]</p>                <p>[hrefx][hrefx][hrefx]</p>    	</dd></dl><!--#l_container--></div><!-- InstanceBeginEditable name="contents" --><div id="main"><h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2><div class="bread">	<ul class="topic_path"><li>[hrefx][hrefx][hrefx][hrefx]</li><li><img src="../img/img_bread.gif" width="10" height="12" alt="の中の" /></li><li>ようこそ不思議な細菌の世界へ</li></ul><!--bread--></div>	<ul id="grid-content">		<!--<li><img src="http://placehold.jp/110x110.png">大腸菌</li>-->		<li>[hrefx][hrefx][hrefx]</li>		<!--<li><img src="http://placehold.jp/110x110.png">サルモネラ</li>-->		<!--<li><img src="http://placehold.jp/110x110.png">クレブシエラ</li>-->		<li>[hrefx][hrefx][hrefx]</li>		<!--<li><img src="http://placehold.jp/110x110.png">プロテウス</li>-->		<!--<li><img src="http://placehold.jp/110x110.png">コレラ</li>-->		<!--<li><img src="http://placehold.jp/110x110.png">腸炎ビブリオ</li>-->		<li>[hrefx][hrefx][hrefx]</li>		<li>[hrefx][hrefx][hrefx]</li>		<!--<li><img src="http://placehold.jp/110x110.png">パスツレラ・マルトフィラ</li>-->		<!--<li><img src="http://placehold.jp/110x110.png">緑膿菌</li>-->		<li>[hrefx][hrefx][hrefx]</li>		<li>[hrefx][hrefx][hrefx]</li>		<li>[hrefx][hrefx][hrefx]</li>		<li>[hrefx][hrefx][hrefx]</li>		<li>[hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx]</li>		<!--<li><img src="http://placehold.jp/110x110.png">バクテロイデス</li>-->		<li>[hrefx][hrefx][hrefx]</li>		<li>[hrefx][hrefx][hrefx]</li>		<!--<li><img src="http://placehold.jp/110x110.png">ヘリコバクター・ヘパティカス</li>-->        <!--<li><img src="http://placehold.jp/110x110.png">トレポネーマ</li>-->		<!--<li><img src="http://placehold.jp/110x110.png">レプトスピラ</li>-->        <li>[hrefx][hrefx][hrefx]</li>        <!--<li><img src="http://placehold.jp/110x110.png">レプトスピラ</li>-->        <li>[hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx]</li>        <!--<li><img src="http://placehold.jp/110x110.png">破傷風菌</li>-->        <!--<li><img src="http://placehold.jp/110x110.png">クロストリジウム・セプチカム</li>-->        <!--<li><img src="http://placehold.jp/110x110.png">クロストリジウム・ディフィシル</li>-->        <li>[hrefx][hrefx][hrefx]</li>		<li>[hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx]</li>        <!--<li><img src="http://placehold.jp/110x110.png">結核菌</li>-->        <li>[hrefx][hrefx][hrefx]</li>        <!--<li><img src="http://placehold.jp/110x110.png">非定型抗酸菌</li>-->        <!--<li><img src="http://placehold.jp/110x110.png">肺炎マイコプラズマ</li>-->        <li>[hrefx][hrefx][hrefx]</li>        <!--<li><img src="http://placehold.jp/110x110.png">リケッチア</li>-->        <!--<li><img src="http://placehold.jp/110x110.png">性器クラミジア</li>-->        <li>[hrefx][hrefx][hrefx]</li>        <!--<li><img src="http://placehold.jp/110x110.png">オウム病クラミジア</li>-->        <li>[hrefx][hrefx][hrefx]</li>        <!--<li><img src="http://placehold.jp/110x110.png">ポリフィロモナス</li>-->        <li>[hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx]</li>	</ul></div><!--main--><!-- InstanceEndEditable --></div><!--#container--><div id="footer">	<div class="container_footer">    <div class="container_sitemap">        <div class="container_sitemap_wrapper">            <div class="siteMap_l">                <dl>                    <dt>[metatags_title]</dt>                        <dd>[hrefx][hrefx][hrefx]</dd>                        <dd>[hrefx][hrefx][hrefx]</dd>                        <dd>[hrefx][hrefx][hrefx]</dd>                        <dd>[hrefx][hrefx][hrefx]</dd>                        <dd>[hrefx][hrefx][hrefx]</dd>                        <dd>[hrefx][hrefx][hrefx]</dd>                        <dd>[hrefx][hrefx][hrefx]</dd>                        <dd>[hrefx][hrefx][hrefx]</dd>						<dd>[hrefx][hrefx][hrefx]</dd>						<dd>[hrefx][hrefx][hrefx]</dd>                    <dt>[hrefx][hrefx][hrefx]</dt>                    <dt>[hrefx][hrefx][hrefx]</dt>                </dl>            </div><!--.siteMap_l-->            <div  class="siteMap_s">                <dl>                    <dt>[hrefx][hrefx][hrefx]</dt>                    <dt>シンポジウム・講演会</dt>                        <dd>[hrefx][hrefx][hrefx]</dd>                        <dd>[hrefx][hrefx][hrefx]</dd>                    <dt>[hrefx][hrefx][hrefx]</dt>                    <dt>[hrefx][hrefx][hrefx]</dt>                    <dt>[hrefx][hrefx][hrefx]</dt>                    <dt>[hrefx][hrefx][hrefx]</dt>                    <dt>[hrefx][hrefx][hrefx]</dt>                </dl>            </div><!--.siteMap_s-->        </div><!--.container_sitemap_wrapper-->        <div  class="siteMap_r">            <dl>                <dt>[metatags_title]</dt>                    <dd>[hrefx][hrefx][hrefx]</dd>                    <dd>[hrefx][hrefx][hrefx][hrefx]</dd>                <!--<dt>[hrefx]</dt>-->                <dt>一般の方へ</dt>                    <dd>[hrefx]</dd>                    <dd>無料出張講演</dd>                    <dd>Q &amp; A</dd>                <dt>[hrefx][hrefx][hrefx]</dt>                <dt>[hrefx][hrefx][hrefx][hrefx]</dt>            </dl>        </div><!--.siteMap_r-->    </div><!--container_sitemap-->    	</div><!--.container_footer-->    <p>JAPANESE SOCIETY FOR BACTERIOLOGY ALL RIGHTS RESERVED.</p></div><!--#footer--></body><!--[if lt IE 9]>	<meta http-equiv="Imagetoolbar" content="no" />    <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]--><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script><script type="text/javascript" src="../Templates/js/youkoso_menu.js"></script><!-- InstanceBeginEditable name="scriptSpace" --><script src="http://code.jquery.com/jquery-1.10.0.min.js" type="text/javascript" charset="UTF-8"></script><script src="http://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js" type="text/javascript" charset="UTF-8"></script><script src="../js/jquery.vgrid.min.js" type="text/javascript" type="text/javascript" charset="UTF-8"></script><!-- InstanceEndEditable --><script type="text/javascript">  var _gaq = _gaq || [];  _gaq.push(['_setAccount', 'UA-46689635-1']);  _gaq.push(['_trackPageview']);  (function() {    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);  })();</script><!-- InstanceEnd --></html>