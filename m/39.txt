    <!doctype html><html lang="jp" class="columnB fixed"><head><!--base_skin_code:uranus,skin_code:ur_std_pf_marble,default_custom_code:--><meta http-equiv="Content-Type" charset="UTF-8" /><meta name="referrer" content="origin"><meta name="keywords" content="[metatags_title]" /><meta http-equiv="X-UA-Compatible" content="IE=edge">    <meta name="description" content="[metatags_description]" />  <link rel="alternate" href="android-app://jp.ameba/http/ameblo.jp/rose-jewelry09/" />  <link rel="alternate" type="text/html" media="handheld" href="http://m.ameba.jp/m/blogTop.do?guid=ON&unm=rose-jewelry09" />  <link rel="alternate" type="text/html" media="only screen and(max-device-width: 640px)" href="https://s.ameblo.jp/rose-jewelry09/" />  <link rel="canonical" href="https://ameblo.jp/rose-jewelry09/"><link rel="next" href="https://ameblo.jp/rose-jewelry09/page-2.html" /><title>[metatags_title]</title><link rel="alternate" type="application/rss+xml" title="RSS" href="http://rssblog.ameba.jp/rose-jewelry09/rss20.xml" /><link rel="shortcut icon" href="https://stat100.ameba.jp/common_style/img/favicon.ico" /><link rel="apple-touch-icon-precomposed" href="https://stat100.ameba.jp/common_style/img/sp/apple-touch-icon.png" /><link rel="stylesheet" media="screen,print" type="text/css" href="https://stat100.ameba.jp/ameblo/pc/css/amebabar/ameblo.common.hf.white-1.2.0.css" /><link rel="stylesheet" media="screen,print" type="text/css" href="https://stat100.ameba.jp/ameblo/pc/css/amebabar/amebabar-1.3.0.css" charset="UTF-8" /><link rel="stylesheet" type="text/css" href="//stat100.ameba.jp/ameblo/pc/css/templateStd-1.20.0.css" /><link rel="stylesheet" media="screen,print" type="text/css" href="//stat100.ameba.jp/ameblo/pc/css/entryDetailEventJack-1.3.0.css"><link rel="stylesheet" media="screen,print" href="//stat100.ameba.jp/ameblo/pc/css/freshSp-1.0.0.css" charset="UTF-8" /><link rel="stylesheet" media="screen,print" href="//stat100.ameba.jp/ameblo/pc/css/freshTopics-1.3.0.css" charset="UTF-8" /><link rel="stylesheet" media="screen,print" href="//stat100.ameba.jp/ameblo/pc/css/freshCm-1.0.0.css" charset="UTF-8" /><link rel="stylesheet" media="screen,print" type="text/css" href="//c.stat100.ameba.jp/ameblo/symbols/v3.1.0/fonts/ameba-symbols.css" charset="UTF-8" />    <link rel="stylesheet" type="text/css" href="https://stat100.ameba.jp/p_skin/ur_std_pf_marble/css/skin.css" id="skincss">  <link rel="stylesheet" media="screen,print" href="https://stat100.ameba.jp/blog/css/user/blogiineEntry.1.000.css" charset="UTF-8" />  <link rel="stylesheet" media="screen,print" href="//stat100.ameba.jp/ameblo/pc/css/modal-1.1.0.css" charset="UTF-8" />  <link rel="stylesheet" media="screen,print" type="text/css" href="//stat100.ameba.jp/ameblo/pc/css/bigfooter-1.17.0.css" charset="UTF-8" /><!--[if lt IE 9]><script src="https://stat100.ameba.jp/common_style/js/library/html5js/html5.js"></script><![endif]--><script src="https://stat100.ameba.jp/blog/new/js/cmn/blog_head.js" charset="UTF-8"></script><script src="https://stat100.ameba.jp/common_style/js/library/swfobject.js" charset="UTF-8"></script><script src="https://stat100.ameba.jp/ad/dfp/js/dfp.js?20170215"></script><script>    Amb.dfp.setTargetingParam('adxOk', 'true');  Amb.dfp.setTargetingParam('skinCode', 'ur_std_pf_marble');</script>  <!--    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/">    <rdf:Description       rdf:about="https://ameblo.jp/rose-jewelry09/entry-12298000305.html"       dc:title="丼祭り"       dc:identifier="https://ameblo.jp/rose-jewelry09/entry-12298000305.html" />    </rdf:RDF>  --><!--ga--><script>  // 母数（[denom]分の1を評価対象に設定する）  var denom = 500;  // tracking id  var trackingId = 'UA-53871743-4';</script><script src="https://stat100.ameba.jp/ameblo/vendor/murmurhash3_gc.min.js"></script><script src="https://stat100.ameba.jp/ameblo/vendor/ameblo_ga.js"></script><!--/ga--><!-- アドセンス対応 -->  <script src="https://stat100.ameba.jp/adsense/js/gdn.js?ts=20160113"></script>  <script>    Amb.Ad.GDN.afc = new Amb.Ad.GDN.AFC({        currentPage : 1,      articleLength : 1    });    Amb.Ad.GDN.adex = new Amb.Ad.GDN.AdEX;  </script><script><!--var meta_words="";var theme_words = new Array("");article_length=1;var rank1 = "";var rank2 = "";var _gaq = _gaq || [];//--></script></head><body class="skin-columnB" data-uranus-layout="columnB"><script>dataLayer = [{  skin: 'uranus',  userType: 'general',  columnType: '2columns',  commonPage_pageId: '',  blogger_ga_tracking_id: ''}];</script><noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-WHNR29"height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-WHNR29');</script><!-- Facebook Pixel Code --><script>!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod? n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,document,'script','https://connect.facebook.net/en_US/fbevents.js');fbq('init', '1600985630194213');fbq('track', "PageView");</script><noscript><img height="1" width="1" style="display:none"src="https://www.facebook.com/tr?id=1600985630194213&ev=PageView&noscript=1"/></noscript><!-- End Facebook Pixel Code -->  <div id="iineEntryListMask" class="mask hide"></div><div class="modal-mask is-hide js-modal-mask js-modal-close"></div>  <div id="fb-root"></div>  <script>    window.fbAsyncInit = function(){      FB.init({          appId  : '311629842256842',          version: 'v2.3',          status : true,          xfbml  : true      });      FB.Event.subscribe('edge.create', function(url, html) {        var pagePath = html.getAttribute('data-page-path') || location.href;        dataLayer.push({ 'event':'FBevent','socialNetwork':'Facebook','socialAction':'Like','socialTarget':url,'socialPagePath':pagePath});      });    };    (function(d, s, id) {      var js, fjs = d.getElementsByTagName(s)[0];      if (d.getElementById(id)) return;      js = d.createElement(s); js.id = id;      js.src = "//connect.facebook.net/ja_JP/sdk.js#xfbml=1&version=v2.3&appId=311629842256842";      fjs.parentNode.insertBefore(js, fjs);    }(document, 'script', 'facebook-jssdk'));  </script><script>  window.twttr = (function(d, s, id) {    var js, fjs = d.getElementsByTagName(s)[0],      t = window.twttr || {};    if (d.getElementById(id)) return t;    js = d.createElement(s);    js.id = id;    js.src = "https://platform.twitter.com/widgets.js";    fjs.parentNode.insertBefore(js, fjs);    t._e = [];    t.ready = function(f) {      t._e.push(f);    };    return t;  }(document, "script", "twitter-wjs"));  (function() {    twttr.ready(      function (twttr) {        twttr.events.bind('follow', function(intentEvent) {          var pagePath = intentEvent.target.parentNode.getAttribute('data-page-path-twitter');          if (!pagePath) return;          var account = intentEvent.target.getAttribute('data-screen-name');          dataLayer.push({ 'event':'twttrevent','socialNetwork':'twitter','socialAction':'follow','socialTarget':account,'socialPagePath': pagePath});        });      }    );  })();</script><!--bodyTop--><a name="pageTop"></a><!-- ▽ページ全体を包括 --><div class="skin-page"><ul id="keyJumpNav" style="display:none"><li><a class="skinBlock" href="#blogContent">本文へジャンプ</a></li><li><a class="skinBlock" href="https://ameblo.jp/rose-jewelry09/page-2.html">次のページヘ</a></li><li><a class="skinBlock" href="https://ameblo.jp/rose-jewelry09/">ブログのトップページへ</a></li><li><a class="skinBlock" href="https://ameblo.jp/rose-jewelry09/archiveentrylist-201708.html">最新の記事一覧ページへ</a></li></ul><div id="ambHeader"><div id="ambHeaderLeft"></div><div id="ambHeaderRight"><div id="ameblo-option" class="-ameblo-cmnhf-service"></div><div class="-ameblo-cmnhf-register"><a class="-ameblo-cmnhf-registerBtn" href="https://user.ameba.jp/regist/registerIntro.do">Ameba新規登録(無料)</a></div></div></div><header role="banner" data-uranus-layout="header" class="skin-bgHeader">  <div data-uranus-layout="headerInner">    <a href="https://ameblo.jp/rose-jewelry09/">      <div data-uranus-component="headerTitle" class="skin-headerTitle">          <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>        <p class="skin-blogSubTitle">        いつも見てくださり有難うございます。<br/>寝ても覚めても頭の中は食べ物の事でいっぱい☆<br/>新商品のお菓子やパンが大好き一人暮らしOLの食事日記です。<br/><br/>過食ありの、こんなブログで申し訳ありませんが<br/>皆様と美味しさを共有出来たら嬉しいです♪        </p>      </div>      <div data-uranus-component="headerImage" class="skin-headerImage"></div>    </a>  </div></header><div data-uranus-component="blogHeaderNav" data-uranus-layout="headerNav" class="skin-blogHeaderNav">  <nav data-uranus-layout="headerNavInner" class="skin-blogHeaderNavInner">    <div data-uranus-layout="headerNavMain">      <ul data-uranus-component="blogNav" class="skin-blogHeaderNavMenu">        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>      </ul>    </div>    <div data-uranus-layout="headerNavSub">      <div data-uranus-component="search" class="skin-blogSearch">        <form data-uranus-component="search" id="blogSearchFormHeader" class="skin-blogSearch js-searchForm" name="blogSearchFormHeader" action="//search.ameba.jp/search.html" method="get">          <input role="search" id="blogSearchInputHeader" class="skin-blogSearchInput js-searchInput" type="text" size="20" maxlength="255" name="q" title="このブログを検索する" value="このブログを検索する" />          <input type="hidden" name="aid" value="rose-jewelry09" />          <div data-uranus-component="searchButton" id="blogSearchBtnHeader" class="js-searchBtn">            <span data-uranus-icon="search large"></span>          </div>        </form>      </div>    </div>  </nav></div><div class="skin-blogBody" data-uranus-layout="body">  <div class="skin-blogBodyInner" data-uranus-layout="content">    <div id="primary" data-uranus-layout="primary">      <div id="main" class="skin-blogMain skinMainArea" data-uranus-layout="main">        <div data-uranus-component="message" class="skin-message skin-bgMain">          <div class="skin-messageInner">            <div data-uranus-component="overwrap">            ↓クリックで他の方のブログも読めます☆<br>[hrefx]            </div>          </div>        </div>    <ul data-uranus-component="paging" class="skin-paging">      <li>        <span data-uranus-component="pagingItem" class="skin-pagingPrev skin-btnPaging is-disabled">前ページ</span>      </li>      <li>        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </li>    </ul>        <div class="skin-blogMainInner skin-bgMain" data-uranus-layout="mainInner" role="main">          <a name="blogContent"></a><!-- ▽日付表示 --><!-- ▽タイトル表示 --><!-- ▽テーマ表示 --><!-- ▽記事下部いいね！/コメント/リブログ テキストリンク --><!-- ▽記事 --><article data-uranus-component="entryStdTop" class="skin-entry themeNumber10101616677 newArticle js-entryWrapper" data-unique-entry-id="12298000305" data-unique-entry-title="丼祭り" data-unique-ameba-id="rose-jewelry09">  <div class="skin-entryInner">    <div data-uranus-component="entryHead" class="skin-entryHead">      <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>      <div><p data-uranus-component="entryDate" class="skin-entryPubdate">  <time datetime="2017-08-08" class="skin-textQuiet"><span class="skin-textLoud">NEW!</span>2017-08-08 09:00:00</time></p></div>      <div><dl data-uranus-component="entryThemes" class="skin-entryThemes">  <dt class="skin-textQuiet">テーマ：</dt>  <dd>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</dd></dl></div>[metatags_descriptionx]    </div>    <div class="js-hashtag hashtag-module-wrapper" data-hash-entryId="12298000305"></div>    <div data-uranus-component="entryAd" class="skin-entryAd">    <div data-uranus-component="entryAdInner">      <div data-uranus-component="entryAdHead" class="skin-textQuiet"><span>AD</span></div>      <div data-uranus-component="entryAdBlock">                        <div data-uranus-component="entryAdBlockCols">          <div data-uranus-component="entryAdBox" class="afc-frame">            <script>              Amb.Ad.GDN.adex.setFrameHere({                articleIndex: 'uranus_2column_1_left',                pageUrl: 'https://ameblo.jp/rose-jewelry09/entry-12298000305.html'              });            </script>          </div>        </div>        <div data-uranus-component="entryAdBlockCols">          <div data-uranus-component="entryAdBox" class="afc-frame">            <script>              Amb.Ad.GDN.adex.setFrameHere({                articleIndex:  'uranus_2column_1_right',                pageUrl: 'https://ameblo.jp/rose-jewelry09/entry-12298000305.html'              });            </script>          </div>        </div>              </div>    </div>  </div>    <div data-uranus-component="entryFooter" class="skin-entryFooter">      <div data-uranus-component="entryAction">        <div data-uranus-component="entryActionItem">    <div id="iineBtnWrap" class="iineBtnWrap">      <iframe src="//iine.blog.ameba.jp/web/display_iine.html?receiveAmebaId=rose-jewelry09&entryId=12298000305&from=entry&device=pc&baseSkinCode=uranus&viewType=vertical" name="iine" width="100%" height="50" class="iineBtnIframe" frameborder="0" allowtransparency="true" scrolling="no">いいね！</iframe>    </div>        </div>        <div data-uranus-component="entryActionItem">          <p data-uranus-component="entryButton">            <a href="javascript:void(0);"  data-entryId="12298000305" class="commentWinOpenBtn">              <span  data-uranus-component="entryButtonIcon" data-uranus-icon="comment large hasLabel"></span>コメントする                          </a>          </p>        </div>        <div data-uranus-component="entryActionItem">          <p data-uranus-component="entryButton">            <a href="http://blog.ameba.jp/ucs/logininput.do?reblog_ameba_id=rose-jewelry09&reblog_entry_id=12298000305&entry_title=%E4%B8%BC%E7%A5%AD%E3%82%8A" data-entryId="12298000305" class="reblogEditBtn" data-tap_id="reblog" data-content_ids="['rose-jewelry09','12298000305','general']">              <span data-uranus-component="entryButtonIcon" data-uranus-icon="reblog medium hasLabel"></span>リブログする                          </a>          </p>        </div>      </div>        <div data-uranus-component="feedbacks">    <p data-uranus-component="feedbacksLike">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p>  </div>      <!-- 区切り線 -->      <div data-uranus-component="entryFooterDivider" class="skin-borderQuiet"></div>      <!-- ▽ソーシャルボタン -->      <ul data-uranus-component="entryShare" class="skin-entryShare">        <li><div data-uranus-component="hatebuButton" class="hatebu-button">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<script src="https://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"></script></div></li>        <li><a class="tweetBtn" href="https://twitter.com/share?text=%E3%80%8E%E4%B8%BC%E7%A5%AD%E3%82%8A%E3%80%8F%0d%0a%e2%87%92&url=https%3A%2F%2Fameblo.jp%2Frose-jewelry09%2Fentry-12298000305.html&hashtags=%E3%82%A2%E3%83%A1%E3%83%96%E3%83%AD&via=ameba_official" target="_blank" rel="nofollow" data-uranus-component="tweetButton"><i></i><span>ツイート</span></a></li>        <li><div data-uranus-component="fbButton" class="fb-share-button" data-href="https://ameblo.jp/rose-jewelry09/entry-12298000305.html" data-layout="button_count"></div></li>      </ul>    </div>  </div></article><!-- /skin-entry --><div data-uranus-component="mainWidget">  <div data-uranus-component="mainWidgetHeader" class="skin-mainWidgetTitle skin-borderLoud">    <h4 data-uranus-component="mainWidgetTitle">同じテーマ&nbsp;「[hrefx]」&nbsp;の記事</h4>  </div>  <div data-uranus-component="mainWidgetBody">    <ul data-uranus-component="relatedEntries" class="skin-borderLoud">    <li class="skin-borderQuiet">      <a href="//ameblo.jp/rose-jewelry09/entry-12297993462.html" data-uranus-component="relatedEntriesTarget">        <p data-uranus-component="relatedEntriesTitle">エクセルシオール過食</p>        <p data-uranus-component="relatedEntriesDatetime" class="skin-textQuiet">2017-08-07</p>        <div data-uranus-component="relatedEntriesFeedback" class="skin-textQuiet">          <dl data-uranus-component="feedbackCounts" class="skin-textQuiet">                <dt><span data-uranus-icon="iine large"></span></dt>                <dd>77</dd>              <dt><span data-uranus-icon="comment large"></span></dt>              <dd>6</dd>          </dl>        </div>      </a>    </li>    <li class="skin-borderQuiet">      <a href="//ameblo.jp/rose-jewelry09/entry-12297717632.html" data-uranus-component="relatedEntriesTarget">        <p data-uranus-component="relatedEntriesTitle">菓子パンやら</p>        <p data-uranus-component="relatedEntriesDatetime" class="skin-textQuiet">2017-08-03</p>        <div data-uranus-component="relatedEntriesFeedback" class="skin-textQuiet">          <dl data-uranus-component="feedbackCounts" class="skin-textQuiet">                <dt><span data-uranus-icon="iine large"></span></dt>                <dd>81</dd>              <dt><span data-uranus-icon="comment large"></span></dt>              <dd>4</dd>          </dl>        </div>      </a>    </li>    <li class="skin-borderQuiet">      <a href="//ameblo.jp/rose-jewelry09/entry-12295979868.html" data-uranus-component="relatedEntriesTarget">        <p data-uranus-component="relatedEntriesTitle">風邪でも過食</p>        <p data-uranus-component="relatedEntriesDatetime" class="skin-textQuiet">2017-08-01</p>        <div data-uranus-component="relatedEntriesFeedback" class="skin-textQuiet">          <dl data-uranus-component="feedbackCounts" class="skin-textQuiet">                <dt><span data-uranus-icon="iine large"></span></dt>                <dd>91</dd>              <dt><span data-uranus-icon="comment large"></span></dt>              <dd>6</dd>          </dl>        </div>      </a>    </li>    </ul>  </div>  <div data-uranus-component="mainWidgetFooter">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div></div><div data-uranus-component="mainWidget">  <div data-uranus-component="mainWidgetHeader" class="skin-mainWidgetTitle skin-borderLoud">    <h4>画像つき記事</h4>  </div>  <div data-uranus-component="mainWidgetBody">    <ul data-uranus-component="imageEntries">      <li>        <a href="https://ameblo.jp/rose-jewelry09/entry-12297997104.html?frm_src=thumb_module" data-uranus-component="imageEntriesTarget">          <div data-uranus-component="imageEntriesCover">            <img src="//stat.ameba.jp/user_images/20170802/10/rose-jewelry09/a0/d8/j/t02200124_0960054013995961548.jpg?cpd=215" alt="わらび餅＆焼き菓子">          </div>          <p data-uranus-component="imageEntriesTitle">わらび餅＆焼き菓子</p>          <p data-uranus-component="imageEntriesDatetime" class="skin-textQuiet">昨日</p>        </a>      </li>      <li>        <a href="https://ameblo.jp/rose-jewelry09/entry-12297993462.html?frm_src=thumb_module" data-uranus-component="imageEntriesTarget">          <div data-uranus-component="imageEntriesCover">            <img src="//stat.ameba.jp/user_images/20170802/10/rose-jewelry09/4a/92/j/t02200137_0960059613995952853.jpg?cpd=215" alt="エクセルシオール過食">          </div>          <p data-uranus-component="imageEntriesTitle">エクセルシオール過食</p>          <p data-uranus-component="imageEntriesDatetime" class="skin-textQuiet">昨日</p>        </a>      </li>      <li>        <a href="https://ameblo.jp/rose-jewelry09/entry-12292522855.html?frm_src=thumb_module" data-uranus-component="imageEntriesTarget">          <div data-uranus-component="imageEntriesCover">            <img src="//stat.ameba.jp/user_images/20170714/13/rose-jewelry09/cc/89/j/t02200279_0757096013982116248.jpg?cpd=215" alt="ディオールカフェ">          </div>          <p data-uranus-component="imageEntriesTitle">ディオールカフェ</p>          <p data-uranus-component="imageEntriesDatetime" class="skin-textQuiet">おととい</p>        </a>      </li>      <li>        <a href="https://ameblo.jp/rose-jewelry09/entry-12297986758.html?frm_src=thumb_module" data-uranus-component="imageEntriesTarget">          <div data-uranus-component="imageEntriesCover">            <img src="//stat.ameba.jp/user_images/20170802/10/rose-jewelry09/0a/5a/j/t02200149_0960065213995937676.jpg?cpd=215" alt="パン屋さんのパン">          </div>          <p data-uranus-component="imageEntriesTitle">パン屋さんのパン</p>          <p data-uranus-component="imageEntriesDatetime" class="skin-textQuiet">おととい</p>        </a>      </li>    </ul>  </div>  <div data-uranus-component="mainWidgetFooter">    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]  </div></div>          <span id="js-snews-trigger"></span>        </div>        <div data-uranus-component="blogFooterNav" data-uranus-layout="footerNav" class="skin-blogFooterNav">    <ul data-uranus-component="paging" class="skin-paging">      <li>        <span data-uranus-component="pagingItem" class="skin-pagingPrev skin-btnPaging is-disabled">前ページ</span>      </li>      <li>        <a href="https://ameblo.jp/rose-jewelry09/page-2.html" data-uranus-component="pagingItem" class="skin-pagingNext skin-btnPaging ga-pagingTopNextBottom">次ページ<span data-uranus-icon="paging_next large" class="skin-btnPagingIcon"></span>        </a>      </li>    </ul>          <nav data-uranus-layout="footerNavInner" class="skin-blogFooterNavInner">            <ul data-uranus-component="blogNav" class="skin-blogHFooterNavMenu">              <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>              <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>          </nav>        </div>      </div>      <div id="subA" class="skin-blogSubA" data-uranus-layout="subA">        <div id="subAInner" class="skin-blogSubAInner" data-uranus-layout="subAInner">          <!--subATop-->            <div data-uranus-component="widget" class="skin-widget" id="freeplugin">              <div class="skin-widgetInner">                <div data-uranus-component="widgetBody" class="skin-widgetBody">                  <div class="plugin">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<!-- Rakuten Widget FROM HERE --><script type="text/javascript" src="https://xml.affiliate.rakuten.co.jp/widget/js/rakuten_widget.js"></script><!-- Rakuten Widget TO HERE -->[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<div id="inner_space"></div><script type="text/javascript" src="//blogparts.blogmura.com/pts/js/blogparts.js?chid=1546157&amp;bgcolor=FFFFFF&amp;size=160&amp;link=001eff&amp;time=600000&amp;catid=60&amp;subcatid=5900&amp;select=outrank&amp;host=http%3A%2F%2Fameblo.jp%2Frose-jewelry09%2F&amp;border=2&amp;dspsize=0&amp;bgcolor2=F7F7F7&amp;link2=001eff" charset="UTF-8"></script></div>                </div>              </div>            </div>      <!--adSidePremium--><div data-uranus-component="widget" class="subAdBannerArea subModule" id="sideTopBanner">  <div data-uranus-component="widgetAd" class="subAdBannerHeader"><span>AD</span></div>    <div data-aja-ad data-aja-asi="roASSfpkR"></div></div><div data-uranus-component="widget" class="skin-widget" id="theme">  <div class="skin-widgetInner">    <div data-uranus-component="widgetHead" class="skin-widgetHead">      <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    </div>    <div data-uranus-component="widgetBody" class="skin-widgetBody">        <ul data-uranus-component="linkList" class="skin-linkList">        <li class="themeNumber10101616677">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698752">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10103346405">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10103414817">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698781">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698794">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698795">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698801">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698777">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698761">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698757">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698755">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698814">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698769">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="themeNumber10101698771">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>      <p data-uranus-component="widgetButton" class="skin-widgetButton">        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </p>    </div>  </div></div><div data-uranus-component="widget" class="skin-widget" id="recentEntries">  <div class="skin-widgetInner">    <div data-uranus-component="widgetHead" class="skin-widgetHead">      <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    </div>    <div data-uranus-component="widgetBody" class="skin-widgetBody">			<ul data-uranus-component="linkList" class="skin-linkList">				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>			</ul>			<p data-uranus-component="widgetButton" class="skin-widgetButton">				[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]			</p>    </div>  </div></div><div data-uranus-component="widget" class="skin-widget" id="readers">  <div class="skin-widgetInner">    <div data-uranus-component="widgetHead" class="skin-widgetHead">      <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    </div>    <div data-uranus-component="widgetBody" class="skin-widgetBody">			<ul data-uranus-component="linkList" class="skin-linkList">				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>			</ul>			<p data-uranus-component="widgetButton" class="skin-widgetButton">				[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]			</p>			<div data-uranus-component="readers" class="skin-readers">        <p data-uranus-component="readersTotal" class="skin-readersTotal">					読者数: <span data-uranus-component="readersCount" class="skin-readersCount">216</span> 人        </p>        <p data-uranus-component="readersButton" class="skin-widgetButton">          [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </p>      </div>    </div>  </div></div><div data-uranus-component="widget" class="skin-widget" id="profile">  <div class="skin-widgetInner">    <div data-uranus-component="widgetHead" class="skin-widgetHead">      <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    </div>    <div data-uranus-component="widgetBody" class="skin-widgetBody">      <div data-uranus-component="profile" class="skin-profile">        <div data-uranus-component="profileAvatar" class="skin-profileAvatar">          <a href="http://profile.ameba.jp/rose-jewelry09/">            <img width="120" height="120" alt="" src="https://stat.profile.ameba.jp/profile_images/20170324/07/17/KH/j/o048004191490309484625.jpg?cpd=120" />          </a>        </div>        <p data-uranus-component="profileName" class="skin-profileName">          [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </p>        <dl data-uranus-component="profileStatus" class="skin-profileStatus">            <dt>性別：</dt>            <dd>女性</dd>            <dt>お住まいの地域：</dt>            <dd>東京都</dd>            <dt>自己紹介：</dt>            <dd>沖縄出身、東京育ち  都内でOLをしております。 将来に不安を感じつつも過食嘔吐が止められず...</dd>        </dl>          <p data-uranus-component="profileMore" class="skin-profileMore">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]          </p>      </div>        <div data-uranus-component="profileGenre" class="skin-borderQuiet">          <dl>            <dt>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</dt>            <dd class="skin-rankingResult">408位                <span data-uranus-component="rankingStatus">↓</span>            </dd>          </dl>              <dl>                <dt>                  <a href="https://blogger.ameba.jp/genres/sweets" data-tap_id="pc-bloggergenre-ranking-personal" data-content_ids="['https://blogger.ameba.jp/ranking/sweets','sweets','','article_blog-blogtop','general']" >                    スイーツマニアジャンル                  </a>                </dt>                <dd class="skin-rankingResult">5位                    <span data-uranus-component="rankingStatus" class="skin-sideTextLoud">↑</span>                </dd>              </dl>        </div>      <p data-uranus-component="widgetButton" class="skin-widgetButton">        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </p>    </div>  </div></div><div data-uranus-component="widget" class="skin-widget" id="search">  <div class="skin-widgetInner">    <div data-uranus-component="widgetBody" class="skin-widgetBody">      <form data-uranus-component="search" id="blogSearchFormSide" class="skin-blogSearch js-searchForm" name="blogSearchFormSide" action="//search.ameba.jp/search.html" method="get">        <input role="search" id="blogSearchInputSide" class="skin-blogSearchInput js-searchInput" type="text" size="20" maxlength="255" name="q" title="このブログを検索する" value="このブログを検索する" />        <input type="hidden" name="aid" value="rose-jewelry09" />        <div data-uranus-component="searchButton" id="blogSearchBtnSide" class="js-searchBtn">          <span data-uranus-icon="search large"></span>        </div>      </form>    </div>  </div></div><div data-uranus-component="widget" class="skin-widget" id="ranking">  <div class="skin-widgetInner">    <div data-uranus-component="widgetHead" class="skin-widgetHead">      <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    </div>    <div data-uranus-component="widgetBody" class="skin-widgetBody">      <div data-uranus-component="ranking" class="skin-ranking">        <p data-uranus-component="rankingNone" class="skin-rankingNone">          このブログはジャンルランキングに参加していません。        </p>         <p data-uranus-component="widgetButton" class="skin-widgetButton">          [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </p> 	       	              </div>    </div>  </div></div><div data-uranus-component="widget" class="skin-widget" id="rss">  <div class="skin-widgetInner">    <div data-uranus-component="widgetBody" class="skin-widgetBody">      <p data-uranus-component="widgetLink">        <a class="skin-sideLink" href="http://rssblog.ameba.jp/rose-jewelry09/rss20.xml"><span data-uranus-icon="rss medium hasLabel"></span>RSS</a>      </p>      <p data-uranus-component="widgetLink">        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </p>    </div>  </div></div>  <div data-uranus-component="widget" class="subAdBannerArea subModule" id="sideBottomBanner">    <div data-uranus-component="widgetAd" class="subAdBannerHeader"><span>AD</span></div>    <div class="gpt-frame" id="div-gpt-ad-1341245517290-1" name="/7765/BTFSidePanel_Uranus">      <script>Amb.dfp.setFrameHere();</script>    </div>  </div>        </div>      </div>    </div>    <div class="skin-blogSubB" data-uranus-layout="subB">      <div class="skin-blogSubBInner" data-uranus-layout="subBInner">        <!--subBTop-->      </div>    </div><!-- /SubB -->  </div></div><!-- ********************************************************* --><!--bodyBottom-->        <div class="gpt-frame" id="div-gpt-ad-1341245517293-1" name="/7765/FooterJack_AmebaBlog_woman"><script>Amb.dfp.setFrameHere();</script></div><div class="bfl-bigfooter" id="js-bigfooter" data-state="general">  <div class="bfl-topics__outer" id="js-bigfooter-topics">    <div class="bfl-topics bfu-clear">      <div class="bfl-topics__headline">        <p class="bfl-topics__headline__title bfc-headline bfc-headline--large">Ameba人気のブログ</p>      </div>      <div class="bfl-ranking__outer bfu-clear bfu-is-hidden" id="js-bigfooter-ranking-outer">        <div class="bfl-ranking__headline">          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>          <ul class="bfl-ranking__headline__tab bfp-ranking__tab bfu-clear" id="js-bigfooter-ranking-tab">              <li class="bfp-ranking__tab__item" data-rank-index="0" data-ga-category="rankingTab-genre" data-ga-label="gen">                <a href="javascript:void(0)" data-tap_id="pc-bloggergenre-ranking-tab" data-content_ids="['','','','article_blog-blogtop','general']" >                スイーツマニアジャンル                </a>              </li>              <li class="bfp-ranking__tab__item" data-rank-index="1" data-ga-category="topBlogRanking-official" data-ga-label="gen">                <a href="javascript:void(0)" data-tap_id="pc-official-rankig-tab" data-content_ids="['','','','article_blog-blogtop','general']" >                芸能人                </a>              </li>          </ul>        </div>        <div class="bfp-ranking__list__outer" id="js-bigfooter-ranking-list" pageType="blog-blogtop">          <div id="js-ranking-attr-genre" class="bfl-ranking bfp-ranking__list bfp-ranking__list--genre" genrecode="sweets">            <ul class="bfp-ranking-userCategory__list">                <li class="bfp-ranking-userCategory__link__item">                  <div class="bfp-ranking-userCategory__link__thumb">                    <a href="/ohohohoho12345" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['ohohohoho12345','sweets','1','article_blog-blogtop','general']" >                      <img src="https://stat.profile.ameba.jp/profile_images/20160614/20/ed/ly/j/o075005601465903115070.jpg?cpd=64" width="64" height="64">                    </a>                  </div>                  <div class="bfp-ranking-userCategory__link__info pfu-clear">                    <span class="bfp-ranking-userCategory__link__rank bfc_ranking-number bfc_ranking-number--no1">1</span>                    <span class="bfp-ranking-userCategory__link__name">                      <a href="/ohohohoho12345" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['ohohohoho12345','sweets','1','article_blog-blogtop','general']" >                        スターバッ...                      </a>                    </span>                    <span class="bfp-ranking-userCategory__link__title">                      <a href="/ohohohoho12345" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['ohohohoho12345','sweets','1','article_blog-blogtop','general']" >                        華麗なるスターバックスマダム...                      </a>                    </span>                  </div>                </li>                <li class="bfp-ranking-userCategory__link__item">                  <div class="bfp-ranking-userCategory__link__thumb">                    <a href="/wanta0322" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['wanta0322','sweets','2','article_blog-blogtop','general']" >                      <img src="https://stat.profile.ameba.jp/profile_images/20150225/10/0a/la/j/o064006401424829380930.jpg?cpd=64" width="64" height="64">                    </a>                  </div>                  <div class="bfp-ranking-userCategory__link__info pfu-clear">                    <span class="bfp-ranking-userCategory__link__rank bfc_ranking-number bfc_ranking-number--no2">2</span>                    <span class="bfp-ranking-userCategory__link__name">                      <a href="/wanta0322" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['wanta0322','sweets','2','article_blog-blogtop','general']" >                        わんた                      </a>                    </span>                    <span class="bfp-ranking-userCategory__link__title">                      <a href="/wanta0322" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['wanta0322','sweets','2','article_blog-blogtop','general']" >                        わんたのスイーツ日記〜小さな...                      </a>                    </span>                  </div>                </li>                <li class="bfp-ranking-userCategory__link__item">                  <div class="bfp-ranking-userCategory__link__thumb">                    <a href="/ukkykumi-b" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['ukkykumi-b','sweets','3','article_blog-blogtop','general']" >                      <img src="https://stat.profile.ameba.jp/profile_images/20161206/20/b4/gc/j/o050005001481024887330.jpg?cpd=64" width="64" height="64">                    </a>                  </div>                  <div class="bfp-ranking-userCategory__link__info pfu-clear">                    <span class="bfp-ranking-userCategory__link__rank bfc_ranking-number bfc_ranking-number--no3">3</span>                    <span class="bfp-ranking-userCategory__link__name">                      <a href="/ukkykumi-b" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['ukkykumi-b','sweets','3','article_blog-blogtop','general']" >                        紅子                      </a>                    </span>                    <span class="bfp-ranking-userCategory__link__title">                      <a href="/ukkykumi-b" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['ukkykumi-b','sweets','3','article_blog-blogtop','general']" >                        紅子のセレブなグルメ日記                      </a>                    </span>                  </div>                </li>                <li class="bfp-ranking-userCategory__link__item">                  <div class="bfp-ranking-userCategory__link__thumb">                    <a href="/ushicohomepage0827" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['ushicohomepage0827','sweets','4','article_blog-blogtop','general']" >                      <img src="https://stat.profile.ameba.jp/profile_images/20161217/02/af/4T/j/o112211221481908246680.jpg?cpd=64" width="64" height="64">                    </a>                  </div>                  <div class="bfp-ranking-userCategory__link__info pfu-clear">                    <span class="bfp-ranking-userCategory__link__rank bfc_ranking-number bfc_ranking-number--no4">4</span>                    <span class="bfp-ranking-userCategory__link__name">                      <a href="/ushicohomepage0827" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['ushicohomepage0827','sweets','4','article_blog-blogtop','general']" >                        マロンまろ...                      </a>                    </span>                    <span class="bfp-ranking-userCategory__link__title">                      <a href="/ushicohomepage0827" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['ushicohomepage0827','sweets','4','article_blog-blogtop','general']" >                        POP☆STAR 〜甘党女子...                      </a>                    </span>                  </div>                </li>                <li class="bfp-ranking-userCategory__link__item">                  <div class="bfp-ranking-userCategory__link__thumb">                    <a href="/rose-jewelry09" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['rose-jewelry09','sweets','5','article_blog-blogtop','general']" >                      <img src="https://stat.profile.ameba.jp/profile_images/20170324/07/17/KH/j/o048004191490309484625.jpg?cpd=64" width="64" height="64">                    </a>                  </div>                  <div class="bfp-ranking-userCategory__link__info pfu-clear">                    <span class="bfp-ranking-userCategory__link__rank bfc_ranking-number bfc_ranking-number--no5">5</span>                    <span class="bfp-ranking-userCategory__link__name">                      <a href="/rose-jewelry09" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['rose-jewelry09','sweets','5','article_blog-blogtop','general']" >                        rose-...                      </a>                    </span>                    <span class="bfp-ranking-userCategory__link__title">                      <a href="/rose-jewelry09" data-tap_id="pc-bloggergenre-ranking" data-content_ids="['rose-jewelry09','sweets','5','article_blog-blogtop','general']" >                        [metatags_title]                      </a>                    </span>                  </div>                </li>            </ul>          </div>        </div>        <div class="bfl-topics__more bfl-topics__more--full bfu-clear">          <a href="" class="bfc-more-link" id="js-bigfooter-ranking-more" data-tap_id="" data-content_ids="" >            <span class="bfc-more-link___text">もっとみる</span><i class="bfc-icon bfc-icon--more"></i>          </a>        </div>      </div>    <div class="bfl-genre">      <div class="bfl-genre__headline">        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>      </div>        <!-- 画像ジャンルの場合 -->        <ul class="bfl-genre-image bfu-clear">          <li class="bfp-genre-image_list">              <div class="bfp-genre-image_thumbnail">                <a href="/ohohohoho12345/entry-12298041806.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ohohohoho12345','sweets','1','article_blog-blogtop','general']" >                    <img alt="佐伯チズさんの　お気にいりのアップルパイ　Dog＆Cat　青葉台" src="https://stat.ameba.jp/user_images/20170802/12/ohohohoho12345/67/e8/j/o1536153613996005908.jpg?cpd=176" width="176" height="176" />                  <div class="bfp-genre-image_ranking bfc_ranking-number bfc_ranking-number--no1">                    <i class="s s-ranking-b bfc_ranking-number--icon"></i>                    <span class="">1</span>                  </div>                </a>              </div>              <p class="bfp-genre-image_text">                <a href="/ohohohoho12345/entry-12298041806.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ohohohoho12345','sweets','1','article_blog-blogtop','general']" >                  佐伯チズさんの　お気にいりのアッ...                </a>              </p>              <p class="bfp-genre-image_blogtitle">                <a href="/ohohohoho12345/entry-12298041806.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ohohohoho12345','sweets','1','article_blog-blogtop','general']" >                  華麗なるスターバックスマ...                </a>              </p>          </li>          <li class="bfp-genre-image_list">              <div class="bfp-genre-image_thumbnail">                <a href="/ponke-company/entry-12299366281.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ponke-company','sweets','2','article_blog-blogtop','general']" >                    <img alt="横浜ベイホテル東急　ソマーハウス　スイートジャーニー8月　桃＠みなとみらい" src="https://stat.ameba.jp/user_images/20170806/22/ponke-company/7f/ac/j/o1600106613999379698.jpg?cpd=176" width="176" height="176" />                  <div class="bfp-genre-image_ranking bfc_ranking-number bfc_ranking-number--no2">                    <i class="s s-ranking-b bfc_ranking-number--icon"></i>                    <span class="">2</span>                  </div>                </a>              </div>              <p class="bfp-genre-image_text">                <a href="/ponke-company/entry-12299366281.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ponke-company','sweets','2','article_blog-blogtop','general']" >                  横浜ベイホテル東急　ソマーハウス...                </a>              </p>              <p class="bfp-genre-image_blogtitle">                <a href="/ponke-company/entry-12299366281.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ponke-company','sweets','2','article_blog-blogtop','general']" >                  ぽんけのグルメブログ　～...                </a>              </p>          </li>          <li class="bfp-genre-image_list">              <div class="bfp-genre-image_thumbnail">                <a href="/ohohohoho12345/entry-12298109896.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ohohohoho12345','sweets','3','article_blog-blogtop','general']" >                    <img alt="スタバ21周年記念フラペ　人気カスタマイズが商品となって登場！　" src="https://stat.ameba.jp/user_images/20170802/18/ohohohoho12345/b6/72/j/o1536153613996224826.jpg?cpd=176" width="176" height="176" />                  <div class="bfp-genre-image_ranking bfc_ranking-number bfc_ranking-number--no3">                    <i class="s s-ranking-b bfc_ranking-number--icon"></i>                    <span class="">3</span>                  </div>                </a>              </div>              <p class="bfp-genre-image_text">                <a href="/ohohohoho12345/entry-12298109896.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ohohohoho12345','sweets','3','article_blog-blogtop','general']" >                  スタバ21周年記念フラペ　人気カ...                </a>              </p>              <p class="bfp-genre-image_blogtitle">                <a href="/ohohohoho12345/entry-12298109896.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ohohohoho12345','sweets','3','article_blog-blogtop','general']" >                  華麗なるスターバックスマ...                </a>              </p>          </li>          <li class="bfp-genre-image_list">              <div class="bfp-genre-image_thumbnail">                <a href="/cloverleaf55/entry-12299328278.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['cloverleaf55','sweets','4','article_blog-blogtop','general']" >                    <img alt="感動的に美味しいマンゴーに出会った　裕成水果" src="https://stat.ameba.jp/user_images/20170806/22/cloverleaf55/01/03/j/o0591044313999359059.jpg?cpd=176" width="176" height="176" />                  <div class="bfp-genre-image_ranking bfc_ranking-number bfc_ranking-number--no4">                    <i class="s s-ranking-b bfc_ranking-number--icon"></i>                    <span class="">4</span>                  </div>                </a>              </div>              <p class="bfp-genre-image_text">                <a href="/cloverleaf55/entry-12299328278.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['cloverleaf55','sweets','4','article_blog-blogtop','general']" >                  感動的に美味しいマンゴーに出会っ...                </a>              </p>              <p class="bfp-genre-image_blogtitle">                <a href="/cloverleaf55/entry-12299328278.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['cloverleaf55','sweets','4','article_blog-blogtop','general']" >                  ひとりでもまめにがんばる...                </a>              </p>          </li>          <li class="bfp-genre-image_list">              <div class="bfp-genre-image_thumbnail">                <a href="/ushicohomepage0827/entry-12298457660.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ushicohomepage0827','sweets','5','article_blog-blogtop','general']" >                    <img alt="新発売・セブンイレブン チョコバナナエクレア" src="https://stat.ameba.jp/user_images/20170803/22/ushicohomepage0827/aa/00/j/o0480048013997101110.jpg?cpd=176" width="176" height="176" />                  <div class="bfp-genre-image_ranking bfc_ranking-number bfc_ranking-number--no5">                    <i class="s s-ranking-b bfc_ranking-number--icon"></i>                    <span class="">5</span>                  </div>                </a>              </div>              <p class="bfp-genre-image_text">                <a href="/ushicohomepage0827/entry-12298457660.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ushicohomepage0827','sweets','5','article_blog-blogtop','general']" >                  新発売・セブンイレブン チョコバ...                </a>              </p>              <p class="bfp-genre-image_blogtitle">                <a href="/ushicohomepage0827/entry-12298457660.html" data-tap_id="pc-bloggergenre-article-ranking" data-content_ids="['ushicohomepage0827','sweets','5','article_blog-blogtop','general']" >                  POP☆STAR 〜甘党...                </a>              </p>          </li>        </ul>        <div class="bfl-topics__more bfl-topics__more--full bfu-clear" id="js-bigfooter-news-more">            <a href="https://blogger.ameba.jp/genres/sweets/entries/ranking#rank5" data-tap_id="pc-bloggergenre-article-ranking-more" data-content_ids="['https://blogger.ameba.jp/genres/sweets/entries/ranking#rank5','sweets','','article_blog-blogtop','general']" >            <span class="bfc-more-link___text">続きをみる</span>            <i class="bfc-icon bfc-icon--more"></i>          </a>        </div>      </div><!--bfl-genre-->      <div class="bfl-news__outer bfu-clear bfu-is-hidden" id="js-bigfooter-news-outer">        <div class="bfl-news">          <div class="bfl-news__headline">            <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>            <div class="bfl-news__headline__update bfc-text bfc-text--weak" id="js-new-update"></div>          </div>          <div class="bfl-news__content bfu-clear" id="js-bigfooter-news">            <div class="bfl-news__topics">              <ul class="bfp-news_list bfu-clear" id="js-bigfooter-news-text"></ul>            </div>            <div class="bfl-news__ad">              <p class="bfl-news__ad-title">PR</p>              <div class="gpt-frame" id="div-gpt-ad-1496214974068-0" name="/7765/bigfooterpanel_general">                <script>Amb.dfp.setFrameHere();</script>              </div>            </div>          </div>          <div class="bfl-topics__more bfl-topics__more--full bfu-clear" id="js-bigfooter-news-more">            <a class="bfc-more-link" href="http://ametopi.jp" data-ga-category="ametopi-more" data-ga-label="gen"><span class="bfc-more-link___text">もっとみる</span><i class="bfc-icon bfc-icon--more"></i></a>          </div>        </div>      </div>    </div>  </div><div id="js-freshTopics"></div><div id="js-freshCm"></div>  <div class="bfl-register">    <div class="bfl-register-columns bfu-clear">      <div class="bfl-register-columns__inner">        <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>        <p class="bf-register-lead">たくさんの芸能人・有名人が<br />        書いているAmebaブログを<br />        無料で簡単にはじめることができます。</p>        <div class="bfl-register__button">          <div class="bfc-button-register bfc-button-register--general">            <a href="http://lo.ameba.jp/v1/RvpCFPlDPJoJGmqPbahu" class="bfc-button__link bfu-valign-m" data-ga-category="button-generalBlogStart">              <span class="bfc-button__text bfc-button-register__text">はじめる</span>            </a>          </div>          <p class="bfl-register__moreInfo">[hrefx]<span class="bfc-icon bfc-icon--more-register bfl-icon-register__moreInfo"></span></p>        </div>      </div>      <div class="bfl-register-columns__inner bfl-register-sideLine">        <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>        <p class="bf-register-lead">多くの方にご紹介したいブログを<br />          執筆する方を「公式トップブロガー」<br />          として認定しております。</p>        <div class="bfl-register__button">          <div class="bfc-button-register bfc-button-register--topBlogger">            <a href="http://ameblo.jp/officialpress/entry-12147471110.html" class="bfc-button__link bfu-valign-m" data-ga-category="button-generalBlogStart">              <span class="bfc-button__text bfc-button-register__text">詳しく見る</span>            </a>          </div>        </div>      </div>      <div class="bfl-register-columns__inner">        <h3>[H3]</h3>        <p class="bf-register-lead">Amebaブログでは、芸能人・有名人ブログを<br />        ご希望される著名人の方／事務所様を<br />        随時募集しております。</p>        <div class="bfl-register__button">          <div class="bfc-button-register">            <a href="http://lo.ameba.jp/v1/vMTwIgvtPsXWZZylIRUk" class="bfc-button__link bfu-valign-m" data-ga-category="button-officialEntry" data-ga-label="gen">              <span class="bfc-button__text bfc-button-register__text">申し込む</span>            </a>          </div>        </div>      </div>    </div>  </div></div></div><div id="ambFooter"></div><img src="//ln.ameba.jp/v2/ra/zBymKrvv?qat=view&qv=1-15-0&qpi=article_blog-blogtop&qr=&entry_id=%2212298000305%22&blogger_ameba_id=%22rose-jewelry09%22" style="display:none" /><img src="https://ameblo.jp/accesslog/BlogAccessLog?bnm=rose-jewelry09&referAddr=&skincode=ur_std_pf_marble" alt="" class="accessLog" style="display:none;"/><img src="//adt.measure.ameblo.jp/pc/rose-jewelry09/4213277c4c1d3197c5fcd6ffc2385e988f933fef" style="display:none;" /><img src="//sy.ameblo.jp/sync/?org=sy.ameblo.jp" width="1" height="1" style="display:none;"><script>  window.ameblo = (typeof window.ameblo === 'object' && window.ameblo.nodeType !== 1) ? window.ameblo : {};  window.ameblo.config = {    urls: {      ameblo: 'https://ameblo.jp',      blog: 'http://blog.ameba.jp',      blogNews: 'http://blognews.ameba.jp',      official: 'https://official.ameba.jp',      stat: 'https://stat100.ameba.jp',      adcrossAPI: '//ad.pr.ameba.jp',      iine:'//iine.blog.ameba.jp',      fresh: 'https://amebafresh.tv',      abemaFresh: 'https://abemafresh.tv',      hashtagAPI: '//rapi.blogtag.ameba.jp',      hashtag: '//blogtag.ameba.jp',      genre: 'https://blogger.ameba.jp'    },    flags: {      isOfficial: false,       isTopBlogger: false,      isEntryDetail: false,      isEntryDetailEventJack: false,      isAdNgUser: false    },    user: {      amebaId: 'rose-jewelry09',        entryId: '12298000305',      groupCheckerId: 0,      sex: '1',      topBloggerCategoryId: '',      nickname: 'rose-jewelry09'    }  };</script><script src="//stat100.ameba.jp/ameblo/pc/js/lib-1.2.0.js" charset="UTF-8"></script><script src="//stat100.ameba.jp/ameblo/pc/js/common-1.1.2.js"></script><script>  new Amb.CommentBtnAmb.PcBlog({    setting:{      commentDomain:'https://comment.ameba.jp',      blogName:'rose-jewelry09',      smartPhoneSwitchFlg:'0'    }  });</script><script src="//stat100.ameba.jp/ameblo/pc/js/utils-1.0.0.js"></script><script src="//stat100.ameba.jp/ameblo/pc/js/uranus/stickySideTop-1.3.0.js"></script><script src="//stat100.ameba.jp/ameblo/pc/js/uranus/calendarView-1.1.0.js"></script><script src="//stat100.ameba.jp/ameblo/pc/js/uranus/commentListView-1.2.0.js"></script><script src="//stat100.ameba.jp/ameblo/pc/js/uranus/searchBox-1.0.0.js"></script><script src="//stat100.ameba.jp/ameblo/pc/js/uranus/archiveListView-1.0.0.js"></script><script src="//stat100.ameba.jp/ameblo/pc/js/uranus/uranusMain-1.1.0.js"></script><script type="text/javascript" src="//stat100.ameba.jp/ameblo/pc/js/hashtag-1.7.0.js"></script><script src="//stat100.ameba.jp/ameblo/pc/js/entryDetailEventJack-1.2.0.js"></script><script src="https://stat100.ameba.jp/common_style/js/ameba/sp/common/sp.viewswitcher.js" charset="UTF-8"></script>  <script charset="UTF-8" src='https://stat100.ameba.jp/blog/js/newskin_imagelink-1.0.0.js'></script><script src='https://stat100.ameba.jp/adcross/pub/js/adLoader-0.1.3.js?20141105' type='text/javascript' charset='utf-8'></script><script>  new window.amb.adcross({iss: true});</script><script src="https://stat100.ameba.jp/ameblo/pc/js/amebabar/ameblo.common.hf.1.4.0.js"></script>  <script src="https://stat100.ameba.jp/ameblo/pc/js/amebabar/ameba_centertext-1.2.0.js"></script><script src="https://stat100.ameba.jp/ameblo/pc/js/amebabar/amebabar-1.2.0.js"></script><script>ameblo.amebabar.initialize({type: 1,centerText: {id: 'barPickup',callback: function(){ window.Amb.Ameblo.centertext.init(); }}});</script>  <script src="https://stat100.ameba.jp/ameblo/pc/js/amebabar/footer_spm_link.1.0.0.js"></script>  <script src="//stat100.ameba.jp/ameblo/pc/js/entryDetailResize-1.2.0.js"></script>  <script>    new window.ameblo.EntryDetailResize({      type: 'uranusskin'    });  </script><div id="iineEntryFrame">  <div id="iineCloseBtn" class="iineListClose ico_close hide"></div>    <div id="iineEntryLoading" class="loading hide"></div>  </div>  <script src="https://stat100.ameba.jp/blog/js/user/iineEntryDetail.1.000.js"></script>  <script>    new Amb.IineEntryAmb.PcBlog({      setting:{        receiveAmebaId:'rose-jewelry09',        blogDomain:'https://ameblo.jp',        statDomain:'https://stat100.ameba.jp',        iineDomain:'//iine.blog.ameba.jp',        measureDomain:'//measure.ameblo.jp'      }    });  </script><script id="js-template-modal-header" type="x-tmpl-mustache"><p class="modal-heading js-modal-heading">  {{^isError}}    <span class="modal-heading__icon" data-uranus-icon="reblog"></span>「<span class="modal-heading__entry-title">{{entryTitle}}</span>」のリブログ一覧<span class="modal-heading__number">（<span>{{entryReblogCnt}}</span>件）</span>  {{/isError}}  {{#isError}}    <span>システムエラー</span>  {{/isError}}</p></script><script id="js-template-modal-list" type="x-tmpl-mustache">  {{^isError}}    {{#list}}      <li class="modal-list__item">        <div class="modal-list__link js-modal-link" data-href="{{link}}" data-ameba-id="{{amebaId}}" data-tap-id="reblog-article" data-page-id="article_reblog-list" data-entry-id="{{entryId}}" data-blogger-type="{{bloggerType}}" data-order-id="{{index}}">          <div class="modal-entry">            <p class="modal-entry__title"><span data-uranus-icon="reblog hasLabel"></span>{{entryReblogTitle}}</p>            <p class="modal-entry__text">{{entryReblogText}}</p>            <div class="modal-user-info">              <div class="modal-user-info__sub">                <img class="modal-user-info__thumb" src="{{thumbnailUrl}}" width="30" height="30">              </div>              <div class="modal-user-info__main">                <p class="modal-user-info__name">{{nickname}}</p>                <p class="modal-user-info__date">{{entryDate}}{{#isNewReblog}}<i class="modal-user-info__icon modal-ico modal-ico-new"></i>{{/isNewReblog}}</p>              </div>            </div>          </div>        </div>      </li>    {{/list}}  {{/isError}}  {{#isError}}    <div class="modal-error js-modal-error">      <p class="mo,dal-error__text">情報の取得に失敗しました。再読み込みしてください。</p>      <p class="modal-btn-retry js-retry">再読み込み</p>    </div>  {{/isError}}  {{#isDispMoreBtn}}  <div class="modal-more js-fetch-more">    <a href="javascript:void(0)" data-tap_id="reblog-list-more" data-content_ids="['rose-jewelry09','12298000305','general']">      <i class="modal-more__icon modal-ico modal-ico-more-btm"></i>もっと見る    </a>  </div>  {{/isDispMoreBtn}}  {{#isMoreError}}  <div class="modal-error-more js-modal-error-more">    <p class="">情報の取得に失敗しました。再読み込みしてください。</p>    <div class="modal-error-more__btn">      <p class="modal-btn-retry js-more-retry">再読み込み</p>    </div>  </div>  {{/isMoreError}}</script><div class="modal js-modal-frame is-hide">  <div class="modal-btn-close js-modal-close">    <a href="javascript:void(0)" class="modal-ico modal-ico-close" data-tap_id="close-reblog-list" data-content_ids="['rose-jewelry09','12298000305','general']"></a>  </div>  <div class="modal-container js-modal-container">    <div class="modal-header js-modal-header"></div>    <div class="modal-body">      <ul class="modal-list js-modal-list"></ul>    </div>  </div>  <div class="modal-loading is-hide js-modal-loading"></div></div><script type="text/javascript" src="//stat100.ameba.jp/ameblo/pc/js/entryListModal-1.0.0.js"></script><script>  new Amb.ReblogEntryAmb.PcBlog({    setting:{      receiveAmebaId:'rose-jewelry09',      blogDomain:'https://ameblo.jp',      statDomain:'//stat100.ameba.jp',      measureDomain:'//measure.ameblo.jp'    }  });</script><script src="//stat100.ameba.jp/ameblo/pc/js/freshSp-1.1.0.js"></script><script src="//stat100.ameba.jp/ameblo/pc/js/freshTopics-1.3.0.js"></script><script src="//stat100.ameba.jp/ameblo/pc/js/freshCm-1.0.0.js"></script>  <script src="//stat100.ameba.jp/ameblo/pc/js/bigfooter-1.15.0.js"></script><script>  var iframe = document.createElement('iframe');  iframe.setAttribute('frameborder', '0');  iframe.setAttribute('scrolling', 'no');  iframe.setAttribute('marginwidth', '0');  iframe.setAttribute('marginheight', '0');  iframe.setAttribute('noresize', true);  iframe.setAttribute('src', 'https://cdn.amanad.adtdp.com/sdk/set_cookie.html');  iframe.setAttribute('style', 'border-width:0;bottom:0;height:0;left:0;line-height:0;margin:0;padding:0;position:fixed;visibility:hidden;width:0');  var body = document.getElementsByTagName('body')[0];  body.appendChild(iframe);</script>  <script src="https://cdn.as.amanad.adtdp.com/sdk/asot-v2.js" async></script><script type="text/javascript" language="javascript">if (window.addEventListener) { window.addEventListener('load', addViewModeElement, false); }if (window.attachEvent) { window.attachEvent('onload', addViewModeElement); }function addViewModeElement(){	var agent = navigator.userAgent;	if( agent.search(/iPhone/) != -1 || agent.search(/iPod/) != -1 || agent.search(/Android/) != -1){	var el = document.createElement("div");	el.setAttribute("id", "viewSwitcher");	el.innerHTML = '<dl><dt>表示切替</dt><dd><ul><li>[hrefx]</li><li><em>パソコン版</em></li></ul></dd></dl>';	document.getElementsByTagName("body").item(0).appendChild(el);	}}</script></body></html>