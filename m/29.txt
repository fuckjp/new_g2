			<!doctype html><!--[if IE 9]>     <html class="no-js ie ie9" lang="[语言]"> <![endif]--><!--[if lt IE 9]>  <html class="no-js ie lt-ie9" lang="ja"> <![endif]--><!--[if gt IE 9]>  <html class="no-js ie" lang="ja"> <![endif]--><!--[if !IE]><!--> <html class="no-js" lang="ja"> <!--<![endif]--><head><meta http-equiv="Content-Type" charset="UTF-8" /><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no" /><meta name="description" content="[metatags_description]" /><meta name="keywords" content="[metatags_keywords]" /><meta name="author" content="[metatags_title]" /><link rel="icon" href="/img/renew/favicon.ico"><title>[metatags_title]</title><meta property="og:title" content="[metatags_title]"><meta property="og:description" content="[metatags_description]"><meta property="og:type" content="website"><meta property="og:url" content="http://www.nihon-shuji.or.jp/"><meta property="og:image" content="http://www.nihon-shuji.or.jp/img/renew/ogp/img_ogp.png"><meta property="og:site_name" content="[metatags_title]"><meta property="fb:app_id" content="1912570645698193"><meta name="format-detection" content="telephone=no"/><link rel="stylesheet" href="/css/renew/app.css" /><link rel="stylesheet" href="/css/renew/fontello/fontello.css" /><script src="/bower_components/modernizr/modernizr.js"></script><script src="/js/ga.js"></script></head><body></head><body><div id="fb-root"></div><script>(function(d, s, id) {  var js, fjs = d.getElementsByTagName(s)[0];  if (d.getElementById(id)) return;  js = d.createElement(s); js.id = id;  js.src = "//connect.facebook.net/ja_JP/sdk.js#xfbml=1&version=v2.9";  fjs.parentNode.insertBefore(js, fjs);}(document, 'script', 'facebook-jssdk'));</script><div class="attention_only_browser">  <p>お使いのブラウザではサイトが正しく表示されない可能性があります。<br>  バージョンアップをおすすめ致します。</p></div><!-- wrapper --><div id="wrapper" class="index_page"><div class="row">  <div class="large-24 columns">  <!-- container -->	<div id="container">	  <!-- header -->	  <!--// ?php include ("include/header.inc"); ? //->	  <!-- /header -->	  <!-- main_img -->	  <div id="main_img">		<h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>		<div class="fb-like" data-href="https://www.facebook.com/nihon.shuji/" data-layout="button_count" data-action="like" data-size="small" data-show-faces="false" data-share="false"></div>	  </div>	  <!-- /main_img -->	  <div class="row collapse">		<!-- article -->		<div id="article" class="large-19 large-push-5 columns">		  <!-- index_wrapper -->		  <div id="index_wrapper" class="re_common_styles fix_matchHeight">			<div class="row collapse">			  <div class="large-16 columns main_box">								<a class="pagelinkBnr generalSearch" href="/general/search/">					<div class="row">						<div class="small-24 columns">							<div class="row collapse">								<div class="small-24 medium-13 columns"><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3></div>								<div class="small-24 medium-11 columns"><p>・都道府県・開講内容<br>・入会特典（期間限定）<span>で検索</span></p></div>							</div>						</div>					</div>				</a>				<a class="pagelinkBnr generalCourse" href="/general/course/">					<div class="row">						<div class="small-24 columns">							<div class="row collapse">								<div class="small-24 medium-13 columns"><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3></div>								<!--//<div class="small-24 medium-11 columns"><p>成人対象WEB限定</p></div>/-->							</div>						</div>					</div>				</a>				<a class="pagelinkBnr generalAdmission" href="/general/admission/">					<div class="row">						<div class="small-24 columns">							<div class="row collapse">								<div class="small-24 medium-19 columns"><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3></div>								<div class="small-24 medium-5 columns"><p>入会のご案内</p></div>							</div>						</div>					</div>				</a>				<a class="pagelinkBnr generalSchool" href="/general/school/">					<div class="row">						<div class="small-24 columns">							<div class="row collapse">								<div class="small-24 medium-16 columns"><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3></div>								<div class="small-24 medium-8 columns"><p>開設説明会・研修会の<br>ご案内（日程・会場）</p></div>							</div>						</div>					</div>				</a>				<div class="row collapse index_btn_list hide-for-small">					<div class="large-12 small-12 columns padding0 margin0">[hrefx][hrefx][hrefx][hrefx]</div>					<div class="large-12 small-12 columns padding0 margin0">[hrefx][hrefx][hrefx][hrefx]</div>				</div>				<div class="row collapse index_btn_list hide-for-small mb10">					<div class="large-24 small-24 columns margin0 padding0">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>				</div>				<div class="row collapse index_btn_list show-for-small">					<div class="large-12 small-12 columns padding0 margin0">[hrefx][hrefx][hrefx][hrefx]</div>					<div class="large-12 small-12 columns padding0 margin0">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>				</div>				<div class="row collapse index_btn_list show-for-small mb10">					<div class="large-24 small-24 columns margin0 padding0">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>				</div>									[hrefx]								<div class="row collapse index_btn_list margin0">					<div class="large-12 small-12 columns show-for-small"><a class="displayNone" href="/kurashi/"><img src="/img/renew/lib/index/kurashi_btn_sp.png" alt="くらしの書"></a></div>					<div class="large-12 small-12 columns show-for-small"><a class="displayNone" href="/taiken/"><img src="/img/renew/lib/index/taiken_btn_sp.png" alt="無料体験 習字教室 開催のご案内"></a></div>					<div class="large-12 small-12 columns hide-for-small"><a class="displayNone" href="/kurashi/"><img src="/img/renew/lib/index/kurashi_btn_pc.png" alt="くらしの書"></a></div>					<div class="large-12 small-12 columns hide-for-small"><a class="displayNone" href="/taiken/"><img src="/img/renew/lib/index/taiken_btn_pc.png" alt="無料体験 習字教室 開催のご案内"></a></div>					<div class="large-12 small-12 columns">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>					<div class="large-12 small-12 columns">[hrefx][hrefx][hrefx][hrefx]</div>					<div class="large-12 small-12 columns">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>					<div class="large-12 small-12 columns">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>					<div class="large-12 small-12 columns">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>					<div class="large-12 small-12 columns">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>				</div>				<!-- <div class="row collapse index_btn_list">				  <div class="large-12 small-12 columns show-for-small">[hrefx]</div>				  <div class="large-12 small-12 columns show-for-small">[hrefx]</div>				  <div class="large-12 small-12 columns hide-for-small">[hrefx]</div>				  <div class="large-12 small-12 columns hide-for-small">[hrefx]</div>				  <div class="large-12 small-12 columns">[hrefx]</div>				  <div class="large-12 small-12 columns">[hrefx]</div>				  <div class="large-12 small-12 columns">[hrefx]</div>				  <div class="large-12 small-12 columns">[hrefx]</div>				  <div class="large-12 small-12 columns">[hrefx]</div>				  <div class="large-12 small-12 columns">[hrefx]</div>				</div> -->				<div class="facebook_box">				  <h4 class="facebook_title">日本習字ニュース<span>Facebookで更新中</span></h4>				  <div class="fb-page" data-href="https://www.facebook.com/nihon.shuji?sk=info&amp;tab=page_info" data-width="500" data-height="250" data-hide-cover="true" data-show-facepile="false" data-show-posts="true"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/nihon.shuji?sk=info&amp;tab=page_info">[hrefx]</blockquote></div></div>				</div>			  </div>			  <div class="large-7 columns" id="topics_wrapper">				<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>				<dl>					    <dt><img src="img/topics_n.gif" width="50" height="15" />&nbsp;<span>17.07.27</span></dt>    <dd>        [hrefx][hrefx][hrefx][hrefx]    </dd>    <dt><img src="img/topics_n.gif" width="50" height="15" />&nbsp;<span>17.07.20</span></dt>    <dd>        [hrefx][hrefx][hrefx][hrefx][hrefx]    </dd>    <dt><img src="img/topics_n.gif" width="50" height="15" />&nbsp;<span>17.07.20</span></dt>    <dd>        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    </dd>    <dt><img src="img/topics_n.gif" width="50" height="15" />&nbsp;<span>17.07.15</span></dt>    <dd>        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    </dd>    <dt><img src="img/topics_n.gif" width="50" height="15" />&nbsp;<span>17.07.05</span></dt>    <dd>        [hrefx][hrefx][hrefx][hrefx][hrefx]    </dd>				</dl>				<div class="news_archive_link"><a onclick="window.open('general/news_list.php','','scrollbars=yes,toolbar=no,resizable=yes,width=500,height=500');return(false)" target="_blank" href="general/news_list.php">すべてのトピックス</a></div>			  </div>			</div>		  </div>		  <!-- index_wrapper -->		</div>		<!-- /article -->		<!-- aside -->		        <div id="aside" class="large-5 large-pull-19 columns fix_matchHeight">          <ul>            <li class="index_alone">[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li><!--            <li>[hrefx]</li>-->            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx]</li>          </ul>          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>          <ul>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li class="online">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          </ul>        </div>        		<!-- /aside -->	  </div>	  <!-- footer -->	        <div id="footer" class="row collapse">        <p class="policy_link">[hrefx][hrefx][hrefx][hrefx][hrefx]</p>        <div class="row collapse footer_sitemap">          <div class="large-5 small-20 small-centered large-uncentered columns">            <div class="dial_box">              <p class="hide-for-small">どこに電話したらいいのかな…<br>              そんな時はお気軽に<br>              お電話をください。</p>              <p>フリーダイヤル（通話料無料）</p>              <div class="large-23 columns hide-for-small"><img src="/img/renew/common/dial_img.png" alt="0120-232350 フミフミゴー"></div>              <div class="large-23 columns show-for-small">[hrefx]</div>              <p>（平日9:00〜17:00）</p>            </div>          </div>          <div class="sitemap_box large-18 columns hide-for-small">            <div class="row">              <div class="large-8 columns">                <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>                <ul>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                </ul>              </div>              <div class="large-8 columns">                <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>                <ul class="mb40">                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li class="online">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                </ul>                <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>                <ul>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                </ul>              </div>              <div class="large-8 columns">                <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>                <ul>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                </ul>              </div>            </div>          </div>        </div>        <p class="copy"><span>copyright(c)2008-2017 </span><span>公益財団法人 日本習字教育財団 All Right Reserved.</span>当サイトの画像、テキスト等の二次使用・無断転写はお断りします。</p>     </div>	  <!-- /footer -->	</div>	<!-- /container -->  </div></div></div><!-- /wrapper -->﻿<script src="/bower_components/jquery/dist/jquery.min.js"></script><script src="/bower_components/foundation/js/foundation.min.js"></script><script src="/js/app.js"></script><script src="/js/field/navActive.js"></script><script src="/js/field/jquery.matchHeight-min.js"></script><script src="/js/lightbox.js"></script><script>    lightbox.option({      'resizeDuration': 200,    });</script><script type="text/javascript">$(function() {    $('#container > .row .fix_matchHeight').matchHeight();});</script><script type="text/javascript">$(function() {    $('.index_btn_list .columns > a').matchHeight();});</script><script>    var _ua = (function(u){      return {        Tablet:(u.indexOf("windows") != -1 && u.indexOf("touch") != -1)          || u.indexOf("ipad") != -1          || (u.indexOf("android") != -1 && u.indexOf("mobile") == -1)          || (u.indexOf("firefox") != -1 && u.indexOf("tablet") != -1)          || u.indexOf("kindle") != -1          || u.indexOf("silk") != -1          || u.indexOf("playbook") != -1,        Mobile:(u.indexOf("windows") != -1 && u.indexOf("phone") != -1)          || u.indexOf("iphone") != -1          || u.indexOf("ipod") != -1          || (u.indexOf("android") != -1 && u.indexOf("mobile") != -1)          || (u.indexOf("firefox") != -1 && u.indexOf("mobile") != -1)          || u.indexOf("blackberry") != -1      }    })(window.navigator.userAgent.toLowerCase());    if(_ua.Mobile){        (function($){            $(".toggle_trigger").on("click", function() {                $(this).next().slideToggle();                $(this).toggleClass("active");            });        })(jQuery);    }</script><script>$(function(){    var ua = navigator.userAgent;    if(ua.indexOf('iPhone') > 0 && ua.indexOf('iPod') == -1 || ua.indexOf('Android') > 0 && ua.indexOf('Mobile') > 0 ){        $('.tel-link').each(function(){            var str = $(this).text();            $(this).html($('<a>').attr('href', 'tel:' + str.replace(/-/g, '')).append(str + '</a>'));        });    }});</script><script type="text/javascript">  (function () {    var tagjs = document.createElement("script");    var s = document.getElementsByTagName("script")[0];    tagjs.async = true;    tagjs.src = "//s.yjtag.jp/tag.js#site=nmGo5h0";    s.parentNode.insertBefore(tagjs, s);  }());</script><noscript>  <iframe src="//b.yjtag.jp/iframe?c=nmGo5h0" width="1" height="1" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"></iframe></noscript></body></html>